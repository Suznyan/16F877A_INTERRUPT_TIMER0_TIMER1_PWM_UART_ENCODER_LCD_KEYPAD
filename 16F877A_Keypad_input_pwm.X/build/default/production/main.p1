Version 3.2 HI-TECH Software Intermediate Code
"2977 D:\Program Files\Microchip\xc8\v2.20\pic\include\proc\pic16f877a.h
[v _TRISC6 `Vb ~T0 @X0 0 e@1086 ]
"2980
[v _TRISC7 `Vb ~T0 @X0 0 e@1087 ]
"2080
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"2416
[v _BRGH `Vb ~T0 @X0 0 e@1218 ]
"2842
[v _SYNC `Vb ~T0 @X0 0 e@1220 ]
"2812
[v _SPEN `Vb ~T0 @X0 0 e@199 ]
"3031
[v _TXEN `Vb ~T0 @X0 0 e@1221 ]
"2515
[v _CREN `Vb ~T0 @X0 0 e@196 ]
"3022
[v _TX9 `Vb ~T0 @X0 0 e@1222 ]
"2794
[v _RX9 `Vb ~T0 @X0 0 e@198 ]
"3037
[v _TXIF `Vb ~T0 @X0 0 e@100 ]
"1059
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"2614
[v _OERR `Vb ~T0 @X0 0 e@193 ]
"2743
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"1066
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"1816
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"912
[s S40 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S40 . CCP1M CCP1Y CCP1X ]
"917
[s S41 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S41 . CCP1M0 CCP1M1 CCP1M2 CCP1M3 ]
"911
[u S39 `S40 1 `S41 1 ]
[n S39 . . . ]
"924
[v _CCP1CONbits `VS39 ~T0 @X0 0 e@23 ]
"892
[v _CCPR1L `Vuc ~T0 @X0 0 e@21 ]
"1100
[s S48 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S48 . CCP2M CCP2Y CCP2X ]
"1105
[s S49 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S49 . CCP2M0 CCP2M1 CCP2M2 CCP2M3 ]
"1099
[u S47 `S48 1 `S49 1 ]
[n S47 . . . ]
"1112
[v _CCP2CONbits `VS47 ~T0 @X0 0 e@29 ]
"1080
[v _CCPR2L `Vuc ~T0 @X0 0 e@27 ]
"743
[s S34 :2 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S34 . T2CKPS TMR2ON TOUTPS ]
"748
[s S35 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S35 . T2CKPS0 T2CKPS1 . TOUTPS0 TOUTPS1 TOUTPS2 TOUTPS3 ]
"742
[u S33 `S34 1 `S35 1 ]
[n S33 . . . ]
"758
[v _T2CONbits `VS33 ~T0 @X0 0 e@18 ]
"2965
[v _TRISC2 `Vb ~T0 @X0 0 e@1082 ]
"2962
[v _TRISC1 `Vb ~T0 @X0 0 e@1081 ]
"216
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"2938
[v _TRISB1 `Vb ~T0 @X0 0 e@1073 ]
"2941
[v _TRISB2 `Vb ~T0 @X0 0 e@1074 ]
"2944
[v _TRISB3 `Vb ~T0 @X0 0 e@1075 ]
"2968
[v _TRISC3 `Vb ~T0 @X0 0 e@1083 ]
"2947
[v _TRISB4 `Vb ~T0 @X0 0 e@1076 ]
"2950
[v _TRISB5 `Vb ~T0 @X0 0 e@1077 ]
"2953
[v _TRISB6 `Vb ~T0 @X0 0 e@1078 ]
"2956
[v _TRISB7 `Vb ~T0 @X0 0 e@1079 ]
"1255
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"2713
[v _RC3 `Vb ~T0 @X0 0 e@59 ]
"2677
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"2680
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"2683
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"2686
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
[v F1025 `(v ~T0 @X0 1 tf1`ul ]
"92 D:\Program Files\Microchip\xc8\v2.20\pic\include\pic.h
[v __delay `JF1025 ~T0 @X0 0 e ]
[p i __delay ]
"2689 D:\Program Files\Microchip\xc8\v2.20\pic\include\proc\pic16f877a.h
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"2692
[v _RB6 `Vb ~T0 @X0 0 e@54 ]
"2695
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
"2761
[v _RD4 `Vb ~T0 @X0 0 e@68 ]
"2764
[v _RD5 `Vb ~T0 @X0 0 e@69 ]
"2767
[v _RD6 `Vb ~T0 @X0 0 e@70 ]
"2770
[v _RD7 `Vb ~T0 @X0 0 e@71 ]
"2755
[v _RD2 `Vb ~T0 @X0 0 e@66 ]
"2758
[v _RD3 `Vb ~T0 @X0 0 e@67 ]
"661
[s S30 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 ]
[n S30 . TMR1ON TMR1CS nT1SYNC T1OSCEN T1CKPS ]
"668
[s S31 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S31 . . T1SYNC . T1CKPS0 T1CKPS1 ]
"675
[s S32 :2 `uc 1 :1 `uc 1 ]
[n S32 . . T1INSYNC ]
"660
[u S29 `S30 1 `S31 1 `S32 1 ]
[n S29 . . . . ]
"680
[v _T1CONbits `VS29 ~T0 @X0 0 e@16 ]
"641
[v _TMR1L `Vuc ~T0 @X0 0 e@14 ]
"648
[v _TMR1H `Vuc ~T0 @X0 0 e@15 ]
"538
[s S26 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S26 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"537
[u S25 `S26 1 ]
[n S25 . . ]
"549
[v _PIR1bits `VS25 ~T0 @X0 0 e@12 ]
"1624
[s S69 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S69 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"1623
[u S68 `S69 1 ]
[n S68 . . ]
"1635
[v _PIE1bits `VS68 ~T0 @X0 0 e@140 ]
"460
[s S23 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S23 . RBIF INTF TMR0IF RBIE INTE TMR0IE PEIE GIE ]
"470
[s S24 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S24 . . T0IF . T0IE ]
"459
[u S22 `S23 1 `S24 1 ]
[n S22 . . . ]
"477
[v _INTCONbits `VS22 ~T0 @X0 0 e@11 ]
"2569
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"2629
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"2599
[v _INTE `Vb ~T0 @X0 0 e@92 ]
"2602
[v _INTEDG `Vb ~T0 @X0 0 e@1038 ]
"59
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"2881
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"1261
[s S56 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S56 . PS PSA T0SE T0CS INTEDG nRBPU ]
"1269
[s S57 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S57 . PS0 PS1 PS2 ]
"1260
[u S55 `S56 1 `S57 1 ]
[n S55 . . . ]
"1275
[v _OPTION_REGbits `VS55 ~T0 @X0 0 e@129 ]
"2704
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"2716
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
[p mainexit ]
"1437
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1499
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"2935
[v _TRISB0 `Vb ~T0 @X0 0 e@1072 ]
"2974
[v _TRISC5 `Vb ~T0 @X0 0 e@1085 ]
"278
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"194 D:\Program Files\Microchip\xc8\v2.20\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"2719 D:\Program Files\Microchip\xc8\v2.20\pic\include\proc\pic16f877a.h
[v _RC5 `Vb ~T0 @X0 0 e@61 ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 73: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 75: extern int rand(void);
[; ;stdlib.h: 76: extern void srand(unsigned int);
[; ;stdlib.h: 77: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 78: extern div_t div(int numer, int denom);
[; ;stdlib.h: 79: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 80: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 81: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 85: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 86: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 87: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 88: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 93: extern void * malloc(size_t);
[; ;stdlib.h: 94: extern void free(void *);
[; ;stdlib.h: 95: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 104: extern int atexit(void (*)(void));
[; ;stdlib.h: 105: extern char * getenv(const char *);
[; ;stdlib.h: 106: extern char ** environ;
[; ;stdlib.h: 107: extern int system(char *);
[; ;stdlib.h: 108: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 109: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 110: extern int abs(int);
[; ;stdlib.h: 111: extern long labs(long);
[; ;stdlib.h: 113: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 114: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 119: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 120: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 122: extern char * ftoa(float f, int * status);
[; ;xc.h: 18: extern const char __xc8_OPTIM_SPEED;
[; ;xc.h: 20: extern double __fpnormalize(double);
[; ;pic16f877a.h: 52: extern volatile unsigned char INDF __at(0x000);
"54 D:\Program Files\Microchip\xc8\v2.20\pic\include\proc\pic16f877a.h
[; ;pic16f877a.h: 54: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f877a.h: 59: extern volatile unsigned char TMR0 __at(0x001);
"61
[; ;pic16f877a.h: 61: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f877a.h: 66: extern volatile unsigned char PCL __at(0x002);
"68
[; ;pic16f877a.h: 68: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f877a.h: 73: extern volatile unsigned char STATUS __at(0x003);
"75
[; ;pic16f877a.h: 75: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f877a.h: 78: typedef union {
[; ;pic16f877a.h: 79: struct {
[; ;pic16f877a.h: 80: unsigned C :1;
[; ;pic16f877a.h: 81: unsigned DC :1;
[; ;pic16f877a.h: 82: unsigned Z :1;
[; ;pic16f877a.h: 83: unsigned nPD :1;
[; ;pic16f877a.h: 84: unsigned nTO :1;
[; ;pic16f877a.h: 85: unsigned RP :2;
[; ;pic16f877a.h: 86: unsigned IRP :1;
[; ;pic16f877a.h: 87: };
[; ;pic16f877a.h: 88: struct {
[; ;pic16f877a.h: 89: unsigned :5;
[; ;pic16f877a.h: 90: unsigned RP0 :1;
[; ;pic16f877a.h: 91: unsigned RP1 :1;
[; ;pic16f877a.h: 92: };
[; ;pic16f877a.h: 93: struct {
[; ;pic16f877a.h: 94: unsigned CARRY :1;
[; ;pic16f877a.h: 95: unsigned :1;
[; ;pic16f877a.h: 96: unsigned ZERO :1;
[; ;pic16f877a.h: 97: };
[; ;pic16f877a.h: 98: } STATUSbits_t;
[; ;pic16f877a.h: 99: extern volatile STATUSbits_t STATUSbits __at(0x003);
[; ;pic16f877a.h: 159: extern volatile unsigned char FSR __at(0x004);
"161
[; ;pic16f877a.h: 161: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f877a.h: 166: extern volatile unsigned char PORTA __at(0x005);
"168
[; ;pic16f877a.h: 168: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f877a.h: 171: typedef union {
[; ;pic16f877a.h: 172: struct {
[; ;pic16f877a.h: 173: unsigned RA0 :1;
[; ;pic16f877a.h: 174: unsigned RA1 :1;
[; ;pic16f877a.h: 175: unsigned RA2 :1;
[; ;pic16f877a.h: 176: unsigned RA3 :1;
[; ;pic16f877a.h: 177: unsigned RA4 :1;
[; ;pic16f877a.h: 178: unsigned RA5 :1;
[; ;pic16f877a.h: 179: };
[; ;pic16f877a.h: 180: } PORTAbits_t;
[; ;pic16f877a.h: 181: extern volatile PORTAbits_t PORTAbits __at(0x005);
[; ;pic16f877a.h: 216: extern volatile unsigned char PORTB __at(0x006);
"218
[; ;pic16f877a.h: 218: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f877a.h: 221: typedef union {
[; ;pic16f877a.h: 222: struct {
[; ;pic16f877a.h: 223: unsigned RB0 :1;
[; ;pic16f877a.h: 224: unsigned RB1 :1;
[; ;pic16f877a.h: 225: unsigned RB2 :1;
[; ;pic16f877a.h: 226: unsigned RB3 :1;
[; ;pic16f877a.h: 227: unsigned RB4 :1;
[; ;pic16f877a.h: 228: unsigned RB5 :1;
[; ;pic16f877a.h: 229: unsigned RB6 :1;
[; ;pic16f877a.h: 230: unsigned RB7 :1;
[; ;pic16f877a.h: 231: };
[; ;pic16f877a.h: 232: } PORTBbits_t;
[; ;pic16f877a.h: 233: extern volatile PORTBbits_t PORTBbits __at(0x006);
[; ;pic16f877a.h: 278: extern volatile unsigned char PORTC __at(0x007);
"280
[; ;pic16f877a.h: 280: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f877a.h: 283: typedef union {
[; ;pic16f877a.h: 284: struct {
[; ;pic16f877a.h: 285: unsigned RC0 :1;
[; ;pic16f877a.h: 286: unsigned RC1 :1;
[; ;pic16f877a.h: 287: unsigned RC2 :1;
[; ;pic16f877a.h: 288: unsigned RC3 :1;
[; ;pic16f877a.h: 289: unsigned RC4 :1;
[; ;pic16f877a.h: 290: unsigned RC5 :1;
[; ;pic16f877a.h: 291: unsigned RC6 :1;
[; ;pic16f877a.h: 292: unsigned RC7 :1;
[; ;pic16f877a.h: 293: };
[; ;pic16f877a.h: 294: } PORTCbits_t;
[; ;pic16f877a.h: 295: extern volatile PORTCbits_t PORTCbits __at(0x007);
[; ;pic16f877a.h: 340: extern volatile unsigned char PORTD __at(0x008);
"342
[; ;pic16f877a.h: 342: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f877a.h: 345: typedef union {
[; ;pic16f877a.h: 346: struct {
[; ;pic16f877a.h: 347: unsigned RD0 :1;
[; ;pic16f877a.h: 348: unsigned RD1 :1;
[; ;pic16f877a.h: 349: unsigned RD2 :1;
[; ;pic16f877a.h: 350: unsigned RD3 :1;
[; ;pic16f877a.h: 351: unsigned RD4 :1;
[; ;pic16f877a.h: 352: unsigned RD5 :1;
[; ;pic16f877a.h: 353: unsigned RD6 :1;
[; ;pic16f877a.h: 354: unsigned RD7 :1;
[; ;pic16f877a.h: 355: };
[; ;pic16f877a.h: 356: } PORTDbits_t;
[; ;pic16f877a.h: 357: extern volatile PORTDbits_t PORTDbits __at(0x008);
[; ;pic16f877a.h: 402: extern volatile unsigned char PORTE __at(0x009);
"404
[; ;pic16f877a.h: 404: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f877a.h: 407: typedef union {
[; ;pic16f877a.h: 408: struct {
[; ;pic16f877a.h: 409: unsigned RE0 :1;
[; ;pic16f877a.h: 410: unsigned RE1 :1;
[; ;pic16f877a.h: 411: unsigned RE2 :1;
[; ;pic16f877a.h: 412: };
[; ;pic16f877a.h: 413: } PORTEbits_t;
[; ;pic16f877a.h: 414: extern volatile PORTEbits_t PORTEbits __at(0x009);
[; ;pic16f877a.h: 434: extern volatile unsigned char PCLATH __at(0x00A);
"436
[; ;pic16f877a.h: 436: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f877a.h: 439: typedef union {
[; ;pic16f877a.h: 440: struct {
[; ;pic16f877a.h: 441: unsigned PCLATH :5;
[; ;pic16f877a.h: 442: };
[; ;pic16f877a.h: 443: } PCLATHbits_t;
[; ;pic16f877a.h: 444: extern volatile PCLATHbits_t PCLATHbits __at(0x00A);
[; ;pic16f877a.h: 454: extern volatile unsigned char INTCON __at(0x00B);
"456
[; ;pic16f877a.h: 456: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f877a.h: 459: typedef union {
[; ;pic16f877a.h: 460: struct {
[; ;pic16f877a.h: 461: unsigned RBIF :1;
[; ;pic16f877a.h: 462: unsigned INTF :1;
[; ;pic16f877a.h: 463: unsigned TMR0IF :1;
[; ;pic16f877a.h: 464: unsigned RBIE :1;
[; ;pic16f877a.h: 465: unsigned INTE :1;
[; ;pic16f877a.h: 466: unsigned TMR0IE :1;
[; ;pic16f877a.h: 467: unsigned PEIE :1;
[; ;pic16f877a.h: 468: unsigned GIE :1;
[; ;pic16f877a.h: 469: };
[; ;pic16f877a.h: 470: struct {
[; ;pic16f877a.h: 471: unsigned :2;
[; ;pic16f877a.h: 472: unsigned T0IF :1;
[; ;pic16f877a.h: 473: unsigned :2;
[; ;pic16f877a.h: 474: unsigned T0IE :1;
[; ;pic16f877a.h: 475: };
[; ;pic16f877a.h: 476: } INTCONbits_t;
[; ;pic16f877a.h: 477: extern volatile INTCONbits_t INTCONbits __at(0x00B);
[; ;pic16f877a.h: 532: extern volatile unsigned char PIR1 __at(0x00C);
"534
[; ;pic16f877a.h: 534: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f877a.h: 537: typedef union {
[; ;pic16f877a.h: 538: struct {
[; ;pic16f877a.h: 539: unsigned TMR1IF :1;
[; ;pic16f877a.h: 540: unsigned TMR2IF :1;
[; ;pic16f877a.h: 541: unsigned CCP1IF :1;
[; ;pic16f877a.h: 542: unsigned SSPIF :1;
[; ;pic16f877a.h: 543: unsigned TXIF :1;
[; ;pic16f877a.h: 544: unsigned RCIF :1;
[; ;pic16f877a.h: 545: unsigned ADIF :1;
[; ;pic16f877a.h: 546: unsigned PSPIF :1;
[; ;pic16f877a.h: 547: };
[; ;pic16f877a.h: 548: } PIR1bits_t;
[; ;pic16f877a.h: 549: extern volatile PIR1bits_t PIR1bits __at(0x00C);
[; ;pic16f877a.h: 594: extern volatile unsigned char PIR2 __at(0x00D);
"596
[; ;pic16f877a.h: 596: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f877a.h: 599: typedef union {
[; ;pic16f877a.h: 600: struct {
[; ;pic16f877a.h: 601: unsigned CCP2IF :1;
[; ;pic16f877a.h: 602: unsigned :2;
[; ;pic16f877a.h: 603: unsigned BCLIF :1;
[; ;pic16f877a.h: 604: unsigned EEIF :1;
[; ;pic16f877a.h: 605: unsigned :1;
[; ;pic16f877a.h: 606: unsigned CMIF :1;
[; ;pic16f877a.h: 607: };
[; ;pic16f877a.h: 608: } PIR2bits_t;
[; ;pic16f877a.h: 609: extern volatile PIR2bits_t PIR2bits __at(0x00D);
[; ;pic16f877a.h: 634: extern volatile unsigned short TMR1 __at(0x00E);
"636
[; ;pic16f877a.h: 636: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f877a.h: 641: extern volatile unsigned char TMR1L __at(0x00E);
"643
[; ;pic16f877a.h: 643: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f877a.h: 648: extern volatile unsigned char TMR1H __at(0x00F);
"650
[; ;pic16f877a.h: 650: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f877a.h: 655: extern volatile unsigned char T1CON __at(0x010);
"657
[; ;pic16f877a.h: 657: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f877a.h: 660: typedef union {
[; ;pic16f877a.h: 661: struct {
[; ;pic16f877a.h: 662: unsigned TMR1ON :1;
[; ;pic16f877a.h: 663: unsigned TMR1CS :1;
[; ;pic16f877a.h: 664: unsigned nT1SYNC :1;
[; ;pic16f877a.h: 665: unsigned T1OSCEN :1;
[; ;pic16f877a.h: 666: unsigned T1CKPS :2;
[; ;pic16f877a.h: 667: };
[; ;pic16f877a.h: 668: struct {
[; ;pic16f877a.h: 669: unsigned :2;
[; ;pic16f877a.h: 670: unsigned T1SYNC :1;
[; ;pic16f877a.h: 671: unsigned :1;
[; ;pic16f877a.h: 672: unsigned T1CKPS0 :1;
[; ;pic16f877a.h: 673: unsigned T1CKPS1 :1;
[; ;pic16f877a.h: 674: };
[; ;pic16f877a.h: 675: struct {
[; ;pic16f877a.h: 676: unsigned :2;
[; ;pic16f877a.h: 677: unsigned T1INSYNC :1;
[; ;pic16f877a.h: 678: };
[; ;pic16f877a.h: 679: } T1CONbits_t;
[; ;pic16f877a.h: 680: extern volatile T1CONbits_t T1CONbits __at(0x010);
[; ;pic16f877a.h: 730: extern volatile unsigned char TMR2 __at(0x011);
"732
[; ;pic16f877a.h: 732: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f877a.h: 737: extern volatile unsigned char T2CON __at(0x012);
"739
[; ;pic16f877a.h: 739: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f877a.h: 742: typedef union {
[; ;pic16f877a.h: 743: struct {
[; ;pic16f877a.h: 744: unsigned T2CKPS :2;
[; ;pic16f877a.h: 745: unsigned TMR2ON :1;
[; ;pic16f877a.h: 746: unsigned TOUTPS :4;
[; ;pic16f877a.h: 747: };
[; ;pic16f877a.h: 748: struct {
[; ;pic16f877a.h: 749: unsigned T2CKPS0 :1;
[; ;pic16f877a.h: 750: unsigned T2CKPS1 :1;
[; ;pic16f877a.h: 751: unsigned :1;
[; ;pic16f877a.h: 752: unsigned TOUTPS0 :1;
[; ;pic16f877a.h: 753: unsigned TOUTPS1 :1;
[; ;pic16f877a.h: 754: unsigned TOUTPS2 :1;
[; ;pic16f877a.h: 755: unsigned TOUTPS3 :1;
[; ;pic16f877a.h: 756: };
[; ;pic16f877a.h: 757: } T2CONbits_t;
[; ;pic16f877a.h: 758: extern volatile T2CONbits_t T2CONbits __at(0x012);
[; ;pic16f877a.h: 808: extern volatile unsigned char SSPBUF __at(0x013);
"810
[; ;pic16f877a.h: 810: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f877a.h: 815: extern volatile unsigned char SSPCON __at(0x014);
"817
[; ;pic16f877a.h: 817: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f877a.h: 820: typedef union {
[; ;pic16f877a.h: 821: struct {
[; ;pic16f877a.h: 822: unsigned SSPM :4;
[; ;pic16f877a.h: 823: unsigned CKP :1;
[; ;pic16f877a.h: 824: unsigned SSPEN :1;
[; ;pic16f877a.h: 825: unsigned SSPOV :1;
[; ;pic16f877a.h: 826: unsigned WCOL :1;
[; ;pic16f877a.h: 827: };
[; ;pic16f877a.h: 828: struct {
[; ;pic16f877a.h: 829: unsigned SSPM0 :1;
[; ;pic16f877a.h: 830: unsigned SSPM1 :1;
[; ;pic16f877a.h: 831: unsigned SSPM2 :1;
[; ;pic16f877a.h: 832: unsigned SSPM3 :1;
[; ;pic16f877a.h: 833: };
[; ;pic16f877a.h: 834: } SSPCONbits_t;
[; ;pic16f877a.h: 835: extern volatile SSPCONbits_t SSPCONbits __at(0x014);
[; ;pic16f877a.h: 885: extern volatile unsigned short CCPR1 __at(0x015);
"887
[; ;pic16f877a.h: 887: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f877a.h: 892: extern volatile unsigned char CCPR1L __at(0x015);
"894
[; ;pic16f877a.h: 894: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f877a.h: 899: extern volatile unsigned char CCPR1H __at(0x016);
"901
[; ;pic16f877a.h: 901: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f877a.h: 906: extern volatile unsigned char CCP1CON __at(0x017);
"908
[; ;pic16f877a.h: 908: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f877a.h: 911: typedef union {
[; ;pic16f877a.h: 912: struct {
[; ;pic16f877a.h: 913: unsigned CCP1M :4;
[; ;pic16f877a.h: 914: unsigned CCP1Y :1;
[; ;pic16f877a.h: 915: unsigned CCP1X :1;
[; ;pic16f877a.h: 916: };
[; ;pic16f877a.h: 917: struct {
[; ;pic16f877a.h: 918: unsigned CCP1M0 :1;
[; ;pic16f877a.h: 919: unsigned CCP1M1 :1;
[; ;pic16f877a.h: 920: unsigned CCP1M2 :1;
[; ;pic16f877a.h: 921: unsigned CCP1M3 :1;
[; ;pic16f877a.h: 922: };
[; ;pic16f877a.h: 923: } CCP1CONbits_t;
[; ;pic16f877a.h: 924: extern volatile CCP1CONbits_t CCP1CONbits __at(0x017);
[; ;pic16f877a.h: 964: extern volatile unsigned char RCSTA __at(0x018);
"966
[; ;pic16f877a.h: 966: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f877a.h: 969: typedef union {
[; ;pic16f877a.h: 970: struct {
[; ;pic16f877a.h: 971: unsigned RX9D :1;
[; ;pic16f877a.h: 972: unsigned OERR :1;
[; ;pic16f877a.h: 973: unsigned FERR :1;
[; ;pic16f877a.h: 974: unsigned ADDEN :1;
[; ;pic16f877a.h: 975: unsigned CREN :1;
[; ;pic16f877a.h: 976: unsigned SREN :1;
[; ;pic16f877a.h: 977: unsigned RX9 :1;
[; ;pic16f877a.h: 978: unsigned SPEN :1;
[; ;pic16f877a.h: 979: };
[; ;pic16f877a.h: 980: struct {
[; ;pic16f877a.h: 981: unsigned RCD8 :1;
[; ;pic16f877a.h: 982: unsigned :5;
[; ;pic16f877a.h: 983: unsigned RC9 :1;
[; ;pic16f877a.h: 984: };
[; ;pic16f877a.h: 985: struct {
[; ;pic16f877a.h: 986: unsigned :6;
[; ;pic16f877a.h: 987: unsigned nRC8 :1;
[; ;pic16f877a.h: 988: };
[; ;pic16f877a.h: 989: struct {
[; ;pic16f877a.h: 990: unsigned :6;
[; ;pic16f877a.h: 991: unsigned RC8_9 :1;
[; ;pic16f877a.h: 992: };
[; ;pic16f877a.h: 993: } RCSTAbits_t;
[; ;pic16f877a.h: 994: extern volatile RCSTAbits_t RCSTAbits __at(0x018);
[; ;pic16f877a.h: 1059: extern volatile unsigned char TXREG __at(0x019);
"1061
[; ;pic16f877a.h: 1061: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f877a.h: 1066: extern volatile unsigned char RCREG __at(0x01A);
"1068
[; ;pic16f877a.h: 1068: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f877a.h: 1073: extern volatile unsigned short CCPR2 __at(0x01B);
"1075
[; ;pic16f877a.h: 1075: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f877a.h: 1080: extern volatile unsigned char CCPR2L __at(0x01B);
"1082
[; ;pic16f877a.h: 1082: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f877a.h: 1087: extern volatile unsigned char CCPR2H __at(0x01C);
"1089
[; ;pic16f877a.h: 1089: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f877a.h: 1094: extern volatile unsigned char CCP2CON __at(0x01D);
"1096
[; ;pic16f877a.h: 1096: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f877a.h: 1099: typedef union {
[; ;pic16f877a.h: 1100: struct {
[; ;pic16f877a.h: 1101: unsigned CCP2M :4;
[; ;pic16f877a.h: 1102: unsigned CCP2Y :1;
[; ;pic16f877a.h: 1103: unsigned CCP2X :1;
[; ;pic16f877a.h: 1104: };
[; ;pic16f877a.h: 1105: struct {
[; ;pic16f877a.h: 1106: unsigned CCP2M0 :1;
[; ;pic16f877a.h: 1107: unsigned CCP2M1 :1;
[; ;pic16f877a.h: 1108: unsigned CCP2M2 :1;
[; ;pic16f877a.h: 1109: unsigned CCP2M3 :1;
[; ;pic16f877a.h: 1110: };
[; ;pic16f877a.h: 1111: } CCP2CONbits_t;
[; ;pic16f877a.h: 1112: extern volatile CCP2CONbits_t CCP2CONbits __at(0x01D);
[; ;pic16f877a.h: 1152: extern volatile unsigned char ADRESH __at(0x01E);
"1154
[; ;pic16f877a.h: 1154: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f877a.h: 1159: extern volatile unsigned char ADCON0 __at(0x01F);
"1161
[; ;pic16f877a.h: 1161: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f877a.h: 1164: typedef union {
[; ;pic16f877a.h: 1165: struct {
[; ;pic16f877a.h: 1166: unsigned ADON :1;
[; ;pic16f877a.h: 1167: unsigned :1;
[; ;pic16f877a.h: 1168: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 1169: unsigned CHS :3;
[; ;pic16f877a.h: 1170: unsigned ADCS :2;
[; ;pic16f877a.h: 1171: };
[; ;pic16f877a.h: 1172: struct {
[; ;pic16f877a.h: 1173: unsigned :2;
[; ;pic16f877a.h: 1174: unsigned GO :1;
[; ;pic16f877a.h: 1175: unsigned CHS0 :1;
[; ;pic16f877a.h: 1176: unsigned CHS1 :1;
[; ;pic16f877a.h: 1177: unsigned CHS2 :1;
[; ;pic16f877a.h: 1178: unsigned ADCS0 :1;
[; ;pic16f877a.h: 1179: unsigned ADCS1 :1;
[; ;pic16f877a.h: 1180: };
[; ;pic16f877a.h: 1181: struct {
[; ;pic16f877a.h: 1182: unsigned :2;
[; ;pic16f877a.h: 1183: unsigned nDONE :1;
[; ;pic16f877a.h: 1184: };
[; ;pic16f877a.h: 1185: struct {
[; ;pic16f877a.h: 1186: unsigned :2;
[; ;pic16f877a.h: 1187: unsigned GO_DONE :1;
[; ;pic16f877a.h: 1188: };
[; ;pic16f877a.h: 1189: } ADCON0bits_t;
[; ;pic16f877a.h: 1190: extern volatile ADCON0bits_t ADCON0bits __at(0x01F);
[; ;pic16f877a.h: 1255: extern volatile unsigned char OPTION_REG __at(0x081);
"1257
[; ;pic16f877a.h: 1257: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f877a.h: 1260: typedef union {
[; ;pic16f877a.h: 1261: struct {
[; ;pic16f877a.h: 1262: unsigned PS :3;
[; ;pic16f877a.h: 1263: unsigned PSA :1;
[; ;pic16f877a.h: 1264: unsigned T0SE :1;
[; ;pic16f877a.h: 1265: unsigned T0CS :1;
[; ;pic16f877a.h: 1266: unsigned INTEDG :1;
[; ;pic16f877a.h: 1267: unsigned nRBPU :1;
[; ;pic16f877a.h: 1268: };
[; ;pic16f877a.h: 1269: struct {
[; ;pic16f877a.h: 1270: unsigned PS0 :1;
[; ;pic16f877a.h: 1271: unsigned PS1 :1;
[; ;pic16f877a.h: 1272: unsigned PS2 :1;
[; ;pic16f877a.h: 1273: };
[; ;pic16f877a.h: 1274: } OPTION_REGbits_t;
[; ;pic16f877a.h: 1275: extern volatile OPTION_REGbits_t OPTION_REGbits __at(0x081);
[; ;pic16f877a.h: 1325: extern volatile unsigned char TRISA __at(0x085);
"1327
[; ;pic16f877a.h: 1327: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f877a.h: 1330: typedef union {
[; ;pic16f877a.h: 1331: struct {
[; ;pic16f877a.h: 1332: unsigned TRISA0 :1;
[; ;pic16f877a.h: 1333: unsigned TRISA1 :1;
[; ;pic16f877a.h: 1334: unsigned TRISA2 :1;
[; ;pic16f877a.h: 1335: unsigned TRISA3 :1;
[; ;pic16f877a.h: 1336: unsigned TRISA4 :1;
[; ;pic16f877a.h: 1337: unsigned TRISA5 :1;
[; ;pic16f877a.h: 1338: };
[; ;pic16f877a.h: 1339: } TRISAbits_t;
[; ;pic16f877a.h: 1340: extern volatile TRISAbits_t TRISAbits __at(0x085);
[; ;pic16f877a.h: 1375: extern volatile unsigned char TRISB __at(0x086);
"1377
[; ;pic16f877a.h: 1377: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f877a.h: 1380: typedef union {
[; ;pic16f877a.h: 1381: struct {
[; ;pic16f877a.h: 1382: unsigned TRISB0 :1;
[; ;pic16f877a.h: 1383: unsigned TRISB1 :1;
[; ;pic16f877a.h: 1384: unsigned TRISB2 :1;
[; ;pic16f877a.h: 1385: unsigned TRISB3 :1;
[; ;pic16f877a.h: 1386: unsigned TRISB4 :1;
[; ;pic16f877a.h: 1387: unsigned TRISB5 :1;
[; ;pic16f877a.h: 1388: unsigned TRISB6 :1;
[; ;pic16f877a.h: 1389: unsigned TRISB7 :1;
[; ;pic16f877a.h: 1390: };
[; ;pic16f877a.h: 1391: } TRISBbits_t;
[; ;pic16f877a.h: 1392: extern volatile TRISBbits_t TRISBbits __at(0x086);
[; ;pic16f877a.h: 1437: extern volatile unsigned char TRISC __at(0x087);
"1439
[; ;pic16f877a.h: 1439: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f877a.h: 1442: typedef union {
[; ;pic16f877a.h: 1443: struct {
[; ;pic16f877a.h: 1444: unsigned TRISC0 :1;
[; ;pic16f877a.h: 1445: unsigned TRISC1 :1;
[; ;pic16f877a.h: 1446: unsigned TRISC2 :1;
[; ;pic16f877a.h: 1447: unsigned TRISC3 :1;
[; ;pic16f877a.h: 1448: unsigned TRISC4 :1;
[; ;pic16f877a.h: 1449: unsigned TRISC5 :1;
[; ;pic16f877a.h: 1450: unsigned TRISC6 :1;
[; ;pic16f877a.h: 1451: unsigned TRISC7 :1;
[; ;pic16f877a.h: 1452: };
[; ;pic16f877a.h: 1453: } TRISCbits_t;
[; ;pic16f877a.h: 1454: extern volatile TRISCbits_t TRISCbits __at(0x087);
[; ;pic16f877a.h: 1499: extern volatile unsigned char TRISD __at(0x088);
"1501
[; ;pic16f877a.h: 1501: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f877a.h: 1504: typedef union {
[; ;pic16f877a.h: 1505: struct {
[; ;pic16f877a.h: 1506: unsigned TRISD0 :1;
[; ;pic16f877a.h: 1507: unsigned TRISD1 :1;
[; ;pic16f877a.h: 1508: unsigned TRISD2 :1;
[; ;pic16f877a.h: 1509: unsigned TRISD3 :1;
[; ;pic16f877a.h: 1510: unsigned TRISD4 :1;
[; ;pic16f877a.h: 1511: unsigned TRISD5 :1;
[; ;pic16f877a.h: 1512: unsigned TRISD6 :1;
[; ;pic16f877a.h: 1513: unsigned TRISD7 :1;
[; ;pic16f877a.h: 1514: };
[; ;pic16f877a.h: 1515: } TRISDbits_t;
[; ;pic16f877a.h: 1516: extern volatile TRISDbits_t TRISDbits __at(0x088);
[; ;pic16f877a.h: 1561: extern volatile unsigned char TRISE __at(0x089);
"1563
[; ;pic16f877a.h: 1563: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f877a.h: 1566: typedef union {
[; ;pic16f877a.h: 1567: struct {
[; ;pic16f877a.h: 1568: unsigned TRISE0 :1;
[; ;pic16f877a.h: 1569: unsigned TRISE1 :1;
[; ;pic16f877a.h: 1570: unsigned TRISE2 :1;
[; ;pic16f877a.h: 1571: unsigned :1;
[; ;pic16f877a.h: 1572: unsigned PSPMODE :1;
[; ;pic16f877a.h: 1573: unsigned IBOV :1;
[; ;pic16f877a.h: 1574: unsigned OBF :1;
[; ;pic16f877a.h: 1575: unsigned IBF :1;
[; ;pic16f877a.h: 1576: };
[; ;pic16f877a.h: 1577: } TRISEbits_t;
[; ;pic16f877a.h: 1578: extern volatile TRISEbits_t TRISEbits __at(0x089);
[; ;pic16f877a.h: 1618: extern volatile unsigned char PIE1 __at(0x08C);
"1620
[; ;pic16f877a.h: 1620: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f877a.h: 1623: typedef union {
[; ;pic16f877a.h: 1624: struct {
[; ;pic16f877a.h: 1625: unsigned TMR1IE :1;
[; ;pic16f877a.h: 1626: unsigned TMR2IE :1;
[; ;pic16f877a.h: 1627: unsigned CCP1IE :1;
[; ;pic16f877a.h: 1628: unsigned SSPIE :1;
[; ;pic16f877a.h: 1629: unsigned TXIE :1;
[; ;pic16f877a.h: 1630: unsigned RCIE :1;
[; ;pic16f877a.h: 1631: unsigned ADIE :1;
[; ;pic16f877a.h: 1632: unsigned PSPIE :1;
[; ;pic16f877a.h: 1633: };
[; ;pic16f877a.h: 1634: } PIE1bits_t;
[; ;pic16f877a.h: 1635: extern volatile PIE1bits_t PIE1bits __at(0x08C);
[; ;pic16f877a.h: 1680: extern volatile unsigned char PIE2 __at(0x08D);
"1682
[; ;pic16f877a.h: 1682: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f877a.h: 1685: typedef union {
[; ;pic16f877a.h: 1686: struct {
[; ;pic16f877a.h: 1687: unsigned CCP2IE :1;
[; ;pic16f877a.h: 1688: unsigned :2;
[; ;pic16f877a.h: 1689: unsigned BCLIE :1;
[; ;pic16f877a.h: 1690: unsigned EEIE :1;
[; ;pic16f877a.h: 1691: unsigned :1;
[; ;pic16f877a.h: 1692: unsigned CMIE :1;
[; ;pic16f877a.h: 1693: };
[; ;pic16f877a.h: 1694: } PIE2bits_t;
[; ;pic16f877a.h: 1695: extern volatile PIE2bits_t PIE2bits __at(0x08D);
[; ;pic16f877a.h: 1720: extern volatile unsigned char PCON __at(0x08E);
"1722
[; ;pic16f877a.h: 1722: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f877a.h: 1725: typedef union {
[; ;pic16f877a.h: 1726: struct {
[; ;pic16f877a.h: 1727: unsigned nBOR :1;
[; ;pic16f877a.h: 1728: unsigned nPOR :1;
[; ;pic16f877a.h: 1729: };
[; ;pic16f877a.h: 1730: struct {
[; ;pic16f877a.h: 1731: unsigned nBO :1;
[; ;pic16f877a.h: 1732: };
[; ;pic16f877a.h: 1733: } PCONbits_t;
[; ;pic16f877a.h: 1734: extern volatile PCONbits_t PCONbits __at(0x08E);
[; ;pic16f877a.h: 1754: extern volatile unsigned char SSPCON2 __at(0x091);
"1756
[; ;pic16f877a.h: 1756: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f877a.h: 1759: typedef union {
[; ;pic16f877a.h: 1760: struct {
[; ;pic16f877a.h: 1761: unsigned SEN :1;
[; ;pic16f877a.h: 1762: unsigned RSEN :1;
[; ;pic16f877a.h: 1763: unsigned PEN :1;
[; ;pic16f877a.h: 1764: unsigned RCEN :1;
[; ;pic16f877a.h: 1765: unsigned ACKEN :1;
[; ;pic16f877a.h: 1766: unsigned ACKDT :1;
[; ;pic16f877a.h: 1767: unsigned ACKSTAT :1;
[; ;pic16f877a.h: 1768: unsigned GCEN :1;
[; ;pic16f877a.h: 1769: };
[; ;pic16f877a.h: 1770: } SSPCON2bits_t;
[; ;pic16f877a.h: 1771: extern volatile SSPCON2bits_t SSPCON2bits __at(0x091);
[; ;pic16f877a.h: 1816: extern volatile unsigned char PR2 __at(0x092);
"1818
[; ;pic16f877a.h: 1818: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f877a.h: 1823: extern volatile unsigned char SSPADD __at(0x093);
"1825
[; ;pic16f877a.h: 1825: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f877a.h: 1830: extern volatile unsigned char SSPSTAT __at(0x094);
"1832
[; ;pic16f877a.h: 1832: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f877a.h: 1835: typedef union {
[; ;pic16f877a.h: 1836: struct {
[; ;pic16f877a.h: 1837: unsigned BF :1;
[; ;pic16f877a.h: 1838: unsigned UA :1;
[; ;pic16f877a.h: 1839: unsigned R_nW :1;
[; ;pic16f877a.h: 1840: unsigned S :1;
[; ;pic16f877a.h: 1841: unsigned P :1;
[; ;pic16f877a.h: 1842: unsigned D_nA :1;
[; ;pic16f877a.h: 1843: unsigned CKE :1;
[; ;pic16f877a.h: 1844: unsigned SMP :1;
[; ;pic16f877a.h: 1845: };
[; ;pic16f877a.h: 1846: struct {
[; ;pic16f877a.h: 1847: unsigned :2;
[; ;pic16f877a.h: 1848: unsigned R :1;
[; ;pic16f877a.h: 1849: unsigned :2;
[; ;pic16f877a.h: 1850: unsigned D :1;
[; ;pic16f877a.h: 1851: };
[; ;pic16f877a.h: 1852: struct {
[; ;pic16f877a.h: 1853: unsigned :2;
[; ;pic16f877a.h: 1854: unsigned I2C_READ :1;
[; ;pic16f877a.h: 1855: unsigned I2C_START :1;
[; ;pic16f877a.h: 1856: unsigned I2C_STOP :1;
[; ;pic16f877a.h: 1857: unsigned I2C_DATA :1;
[; ;pic16f877a.h: 1858: };
[; ;pic16f877a.h: 1859: struct {
[; ;pic16f877a.h: 1860: unsigned :2;
[; ;pic16f877a.h: 1861: unsigned nW :1;
[; ;pic16f877a.h: 1862: unsigned :2;
[; ;pic16f877a.h: 1863: unsigned nA :1;
[; ;pic16f877a.h: 1864: };
[; ;pic16f877a.h: 1865: struct {
[; ;pic16f877a.h: 1866: unsigned :2;
[; ;pic16f877a.h: 1867: unsigned nWRITE :1;
[; ;pic16f877a.h: 1868: unsigned :2;
[; ;pic16f877a.h: 1869: unsigned nADDRESS :1;
[; ;pic16f877a.h: 1870: };
[; ;pic16f877a.h: 1871: struct {
[; ;pic16f877a.h: 1872: unsigned :2;
[; ;pic16f877a.h: 1873: unsigned R_W :1;
[; ;pic16f877a.h: 1874: unsigned :2;
[; ;pic16f877a.h: 1875: unsigned D_A :1;
[; ;pic16f877a.h: 1876: };
[; ;pic16f877a.h: 1877: struct {
[; ;pic16f877a.h: 1878: unsigned :2;
[; ;pic16f877a.h: 1879: unsigned READ_WRITE :1;
[; ;pic16f877a.h: 1880: unsigned :2;
[; ;pic16f877a.h: 1881: unsigned DATA_ADDRESS :1;
[; ;pic16f877a.h: 1882: };
[; ;pic16f877a.h: 1883: } SSPSTATbits_t;
[; ;pic16f877a.h: 1884: extern volatile SSPSTATbits_t SSPSTATbits __at(0x094);
[; ;pic16f877a.h: 1999: extern volatile unsigned char TXSTA __at(0x098);
"2001
[; ;pic16f877a.h: 2001: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f877a.h: 2004: typedef union {
[; ;pic16f877a.h: 2005: struct {
[; ;pic16f877a.h: 2006: unsigned TX9D :1;
[; ;pic16f877a.h: 2007: unsigned TRMT :1;
[; ;pic16f877a.h: 2008: unsigned BRGH :1;
[; ;pic16f877a.h: 2009: unsigned :1;
[; ;pic16f877a.h: 2010: unsigned SYNC :1;
[; ;pic16f877a.h: 2011: unsigned TXEN :1;
[; ;pic16f877a.h: 2012: unsigned TX9 :1;
[; ;pic16f877a.h: 2013: unsigned CSRC :1;
[; ;pic16f877a.h: 2014: };
[; ;pic16f877a.h: 2015: struct {
[; ;pic16f877a.h: 2016: unsigned TXD8 :1;
[; ;pic16f877a.h: 2017: unsigned :5;
[; ;pic16f877a.h: 2018: unsigned nTX8 :1;
[; ;pic16f877a.h: 2019: };
[; ;pic16f877a.h: 2020: struct {
[; ;pic16f877a.h: 2021: unsigned :6;
[; ;pic16f877a.h: 2022: unsigned TX8_9 :1;
[; ;pic16f877a.h: 2023: };
[; ;pic16f877a.h: 2024: } TXSTAbits_t;
[; ;pic16f877a.h: 2025: extern volatile TXSTAbits_t TXSTAbits __at(0x098);
[; ;pic16f877a.h: 2080: extern volatile unsigned char SPBRG __at(0x099);
"2082
[; ;pic16f877a.h: 2082: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f877a.h: 2087: extern volatile unsigned char CMCON __at(0x09C);
"2089
[; ;pic16f877a.h: 2089: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f877a.h: 2092: typedef union {
[; ;pic16f877a.h: 2093: struct {
[; ;pic16f877a.h: 2094: unsigned CM :3;
[; ;pic16f877a.h: 2095: unsigned CIS :1;
[; ;pic16f877a.h: 2096: unsigned C1INV :1;
[; ;pic16f877a.h: 2097: unsigned C2INV :1;
[; ;pic16f877a.h: 2098: unsigned C1OUT :1;
[; ;pic16f877a.h: 2099: unsigned C2OUT :1;
[; ;pic16f877a.h: 2100: };
[; ;pic16f877a.h: 2101: struct {
[; ;pic16f877a.h: 2102: unsigned CM0 :1;
[; ;pic16f877a.h: 2103: unsigned CM1 :1;
[; ;pic16f877a.h: 2104: unsigned CM2 :1;
[; ;pic16f877a.h: 2105: };
[; ;pic16f877a.h: 2106: } CMCONbits_t;
[; ;pic16f877a.h: 2107: extern volatile CMCONbits_t CMCONbits __at(0x09C);
[; ;pic16f877a.h: 2157: extern volatile unsigned char CVRCON __at(0x09D);
"2159
[; ;pic16f877a.h: 2159: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f877a.h: 2162: typedef union {
[; ;pic16f877a.h: 2163: struct {
[; ;pic16f877a.h: 2164: unsigned CVR :4;
[; ;pic16f877a.h: 2165: unsigned :1;
[; ;pic16f877a.h: 2166: unsigned CVRR :1;
[; ;pic16f877a.h: 2167: unsigned CVROE :1;
[; ;pic16f877a.h: 2168: unsigned CVREN :1;
[; ;pic16f877a.h: 2169: };
[; ;pic16f877a.h: 2170: struct {
[; ;pic16f877a.h: 2171: unsigned CVR0 :1;
[; ;pic16f877a.h: 2172: unsigned CVR1 :1;
[; ;pic16f877a.h: 2173: unsigned CVR2 :1;
[; ;pic16f877a.h: 2174: unsigned CVR3 :1;
[; ;pic16f877a.h: 2175: };
[; ;pic16f877a.h: 2176: } CVRCONbits_t;
[; ;pic16f877a.h: 2177: extern volatile CVRCONbits_t CVRCONbits __at(0x09D);
[; ;pic16f877a.h: 2222: extern volatile unsigned char ADRESL __at(0x09E);
"2224
[; ;pic16f877a.h: 2224: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f877a.h: 2229: extern volatile unsigned char ADCON1 __at(0x09F);
"2231
[; ;pic16f877a.h: 2231: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f877a.h: 2234: typedef union {
[; ;pic16f877a.h: 2235: struct {
[; ;pic16f877a.h: 2236: unsigned PCFG :4;
[; ;pic16f877a.h: 2237: unsigned :2;
[; ;pic16f877a.h: 2238: unsigned ADCS2 :1;
[; ;pic16f877a.h: 2239: unsigned ADFM :1;
[; ;pic16f877a.h: 2240: };
[; ;pic16f877a.h: 2241: struct {
[; ;pic16f877a.h: 2242: unsigned PCFG0 :1;
[; ;pic16f877a.h: 2243: unsigned PCFG1 :1;
[; ;pic16f877a.h: 2244: unsigned PCFG2 :1;
[; ;pic16f877a.h: 2245: unsigned PCFG3 :1;
[; ;pic16f877a.h: 2246: };
[; ;pic16f877a.h: 2247: } ADCON1bits_t;
[; ;pic16f877a.h: 2248: extern volatile ADCON1bits_t ADCON1bits __at(0x09F);
[; ;pic16f877a.h: 2288: extern volatile unsigned char EEDATA __at(0x10C);
"2290
[; ;pic16f877a.h: 2290: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f877a.h: 2295: extern volatile unsigned char EEADR __at(0x10D);
"2297
[; ;pic16f877a.h: 2297: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f877a.h: 2302: extern volatile unsigned char EEDATH __at(0x10E);
"2304
[; ;pic16f877a.h: 2304: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f877a.h: 2309: extern volatile unsigned char EEADRH __at(0x10F);
"2311
[; ;pic16f877a.h: 2311: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f877a.h: 2316: extern volatile unsigned char EECON1 __at(0x18C);
"2318
[; ;pic16f877a.h: 2318: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f877a.h: 2321: typedef union {
[; ;pic16f877a.h: 2322: struct {
[; ;pic16f877a.h: 2323: unsigned RD :1;
[; ;pic16f877a.h: 2324: unsigned WR :1;
[; ;pic16f877a.h: 2325: unsigned WREN :1;
[; ;pic16f877a.h: 2326: unsigned WRERR :1;
[; ;pic16f877a.h: 2327: unsigned :3;
[; ;pic16f877a.h: 2328: unsigned EEPGD :1;
[; ;pic16f877a.h: 2329: };
[; ;pic16f877a.h: 2330: } EECON1bits_t;
[; ;pic16f877a.h: 2331: extern volatile EECON1bits_t EECON1bits __at(0x18C);
[; ;pic16f877a.h: 2361: extern volatile unsigned char EECON2 __at(0x18D);
"2363
[; ;pic16f877a.h: 2363: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f877a.h: 2374: extern volatile __bit ACKDT __at(0x48D);
[; ;pic16f877a.h: 2377: extern volatile __bit ACKEN __at(0x48C);
[; ;pic16f877a.h: 2380: extern volatile __bit ACKSTAT __at(0x48E);
[; ;pic16f877a.h: 2383: extern volatile __bit ADCS0 __at(0xFE);
[; ;pic16f877a.h: 2386: extern volatile __bit ADCS1 __at(0xFF);
[; ;pic16f877a.h: 2389: extern volatile __bit ADCS2 __at(0x4FE);
[; ;pic16f877a.h: 2392: extern volatile __bit ADDEN __at(0xC3);
[; ;pic16f877a.h: 2395: extern volatile __bit ADFM __at(0x4FF);
[; ;pic16f877a.h: 2398: extern volatile __bit ADIE __at(0x466);
[; ;pic16f877a.h: 2401: extern volatile __bit ADIF __at(0x66);
[; ;pic16f877a.h: 2404: extern volatile __bit ADON __at(0xF8);
[; ;pic16f877a.h: 2407: extern volatile __bit BCLIE __at(0x46B);
[; ;pic16f877a.h: 2410: extern volatile __bit BCLIF __at(0x6B);
[; ;pic16f877a.h: 2413: extern volatile __bit BF __at(0x4A0);
[; ;pic16f877a.h: 2416: extern volatile __bit BRGH __at(0x4C2);
[; ;pic16f877a.h: 2419: extern volatile __bit C1INV __at(0x4E4);
[; ;pic16f877a.h: 2422: extern volatile __bit C1OUT __at(0x4E6);
[; ;pic16f877a.h: 2425: extern volatile __bit C2INV __at(0x4E5);
[; ;pic16f877a.h: 2428: extern volatile __bit C2OUT __at(0x4E7);
[; ;pic16f877a.h: 2431: extern volatile __bit CARRY __at(0x18);
[; ;pic16f877a.h: 2434: extern volatile __bit CCP1IE __at(0x462);
[; ;pic16f877a.h: 2437: extern volatile __bit CCP1IF __at(0x62);
[; ;pic16f877a.h: 2440: extern volatile __bit CCP1M0 __at(0xB8);
[; ;pic16f877a.h: 2443: extern volatile __bit CCP1M1 __at(0xB9);
[; ;pic16f877a.h: 2446: extern volatile __bit CCP1M2 __at(0xBA);
[; ;pic16f877a.h: 2449: extern volatile __bit CCP1M3 __at(0xBB);
[; ;pic16f877a.h: 2452: extern volatile __bit CCP1X __at(0xBD);
[; ;pic16f877a.h: 2455: extern volatile __bit CCP1Y __at(0xBC);
[; ;pic16f877a.h: 2458: extern volatile __bit CCP2IE __at(0x468);
[; ;pic16f877a.h: 2461: extern volatile __bit CCP2IF __at(0x68);
[; ;pic16f877a.h: 2464: extern volatile __bit CCP2M0 __at(0xE8);
[; ;pic16f877a.h: 2467: extern volatile __bit CCP2M1 __at(0xE9);
[; ;pic16f877a.h: 2470: extern volatile __bit CCP2M2 __at(0xEA);
[; ;pic16f877a.h: 2473: extern volatile __bit CCP2M3 __at(0xEB);
[; ;pic16f877a.h: 2476: extern volatile __bit CCP2X __at(0xED);
[; ;pic16f877a.h: 2479: extern volatile __bit CCP2Y __at(0xEC);
[; ;pic16f877a.h: 2482: extern volatile __bit CHS0 __at(0xFB);
[; ;pic16f877a.h: 2485: extern volatile __bit CHS1 __at(0xFC);
[; ;pic16f877a.h: 2488: extern volatile __bit CHS2 __at(0xFD);
[; ;pic16f877a.h: 2491: extern volatile __bit CIS __at(0x4E3);
[; ;pic16f877a.h: 2494: extern volatile __bit CKE __at(0x4A6);
[; ;pic16f877a.h: 2497: extern volatile __bit CKP __at(0xA4);
[; ;pic16f877a.h: 2500: extern volatile __bit CM0 __at(0x4E0);
[; ;pic16f877a.h: 2503: extern volatile __bit CM1 __at(0x4E1);
[; ;pic16f877a.h: 2506: extern volatile __bit CM2 __at(0x4E2);
[; ;pic16f877a.h: 2509: extern volatile __bit CMIE __at(0x46E);
[; ;pic16f877a.h: 2512: extern volatile __bit CMIF __at(0x6E);
[; ;pic16f877a.h: 2515: extern volatile __bit CREN __at(0xC4);
[; ;pic16f877a.h: 2518: extern volatile __bit CSRC __at(0x4C7);
[; ;pic16f877a.h: 2521: extern volatile __bit CVR0 __at(0x4E8);
[; ;pic16f877a.h: 2524: extern volatile __bit CVR1 __at(0x4E9);
[; ;pic16f877a.h: 2527: extern volatile __bit CVR2 __at(0x4EA);
[; ;pic16f877a.h: 2530: extern volatile __bit CVR3 __at(0x4EB);
[; ;pic16f877a.h: 2533: extern volatile __bit CVREN __at(0x4EF);
[; ;pic16f877a.h: 2536: extern volatile __bit CVROE __at(0x4EE);
[; ;pic16f877a.h: 2539: extern volatile __bit CVRR __at(0x4ED);
[; ;pic16f877a.h: 2542: extern volatile __bit DATA_ADDRESS __at(0x4A5);
[; ;pic16f877a.h: 2545: extern volatile __bit DC __at(0x19);
[; ;pic16f877a.h: 2548: extern volatile __bit D_A __at(0x4A5);
[; ;pic16f877a.h: 2551: extern volatile __bit D_nA __at(0x4A5);
[; ;pic16f877a.h: 2554: extern volatile __bit EEIE __at(0x46C);
[; ;pic16f877a.h: 2557: extern volatile __bit EEIF __at(0x6C);
[; ;pic16f877a.h: 2560: extern volatile __bit EEPGD __at(0xC67);
[; ;pic16f877a.h: 2563: extern volatile __bit FERR __at(0xC2);
[; ;pic16f877a.h: 2566: extern volatile __bit GCEN __at(0x48F);
[; ;pic16f877a.h: 2569: extern volatile __bit GIE __at(0x5F);
[; ;pic16f877a.h: 2572: extern volatile __bit GO __at(0xFA);
[; ;pic16f877a.h: 2575: extern volatile __bit GO_DONE __at(0xFA);
[; ;pic16f877a.h: 2578: extern volatile __bit GO_nDONE __at(0xFA);
[; ;pic16f877a.h: 2581: extern volatile __bit I2C_DATA __at(0x4A5);
[; ;pic16f877a.h: 2584: extern volatile __bit I2C_READ __at(0x4A2);
[; ;pic16f877a.h: 2587: extern volatile __bit I2C_START __at(0x4A3);
[; ;pic16f877a.h: 2590: extern volatile __bit I2C_STOP __at(0x4A4);
[; ;pic16f877a.h: 2593: extern volatile __bit IBF __at(0x44F);
[; ;pic16f877a.h: 2596: extern volatile __bit IBOV __at(0x44D);
[; ;pic16f877a.h: 2599: extern volatile __bit INTE __at(0x5C);
[; ;pic16f877a.h: 2602: extern volatile __bit INTEDG __at(0x40E);
[; ;pic16f877a.h: 2605: extern volatile __bit INTF __at(0x59);
[; ;pic16f877a.h: 2608: extern volatile __bit IRP __at(0x1F);
[; ;pic16f877a.h: 2611: extern volatile __bit OBF __at(0x44E);
[; ;pic16f877a.h: 2614: extern volatile __bit OERR __at(0xC1);
[; ;pic16f877a.h: 2617: extern volatile __bit PCFG0 __at(0x4F8);
[; ;pic16f877a.h: 2620: extern volatile __bit PCFG1 __at(0x4F9);
[; ;pic16f877a.h: 2623: extern volatile __bit PCFG2 __at(0x4FA);
[; ;pic16f877a.h: 2626: extern volatile __bit PCFG3 __at(0x4FB);
[; ;pic16f877a.h: 2629: extern volatile __bit PEIE __at(0x5E);
[; ;pic16f877a.h: 2632: extern volatile __bit PEN __at(0x48A);
[; ;pic16f877a.h: 2635: extern volatile __bit PS0 __at(0x408);
[; ;pic16f877a.h: 2638: extern volatile __bit PS1 __at(0x409);
[; ;pic16f877a.h: 2641: extern volatile __bit PS2 __at(0x40A);
[; ;pic16f877a.h: 2644: extern volatile __bit PSA __at(0x40B);
[; ;pic16f877a.h: 2647: extern volatile __bit PSPIE __at(0x467);
[; ;pic16f877a.h: 2650: extern volatile __bit PSPIF __at(0x67);
[; ;pic16f877a.h: 2653: extern volatile __bit PSPMODE __at(0x44C);
[; ;pic16f877a.h: 2656: extern volatile __bit RA0 __at(0x28);
[; ;pic16f877a.h: 2659: extern volatile __bit RA1 __at(0x29);
[; ;pic16f877a.h: 2662: extern volatile __bit RA2 __at(0x2A);
[; ;pic16f877a.h: 2665: extern volatile __bit RA3 __at(0x2B);
[; ;pic16f877a.h: 2668: extern volatile __bit RA4 __at(0x2C);
[; ;pic16f877a.h: 2671: extern volatile __bit RA5 __at(0x2D);
[; ;pic16f877a.h: 2674: extern volatile __bit RB0 __at(0x30);
[; ;pic16f877a.h: 2677: extern volatile __bit RB1 __at(0x31);
[; ;pic16f877a.h: 2680: extern volatile __bit RB2 __at(0x32);
[; ;pic16f877a.h: 2683: extern volatile __bit RB3 __at(0x33);
[; ;pic16f877a.h: 2686: extern volatile __bit RB4 __at(0x34);
[; ;pic16f877a.h: 2689: extern volatile __bit RB5 __at(0x35);
[; ;pic16f877a.h: 2692: extern volatile __bit RB6 __at(0x36);
[; ;pic16f877a.h: 2695: extern volatile __bit RB7 __at(0x37);
[; ;pic16f877a.h: 2698: extern volatile __bit RBIE __at(0x5B);
[; ;pic16f877a.h: 2701: extern volatile __bit RBIF __at(0x58);
[; ;pic16f877a.h: 2704: extern volatile __bit RC0 __at(0x38);
[; ;pic16f877a.h: 2707: extern volatile __bit RC1 __at(0x39);
[; ;pic16f877a.h: 2710: extern volatile __bit RC2 __at(0x3A);
[; ;pic16f877a.h: 2713: extern volatile __bit RC3 __at(0x3B);
[; ;pic16f877a.h: 2716: extern volatile __bit RC4 __at(0x3C);
[; ;pic16f877a.h: 2719: extern volatile __bit RC5 __at(0x3D);
[; ;pic16f877a.h: 2722: extern volatile __bit RC6 __at(0x3E);
[; ;pic16f877a.h: 2725: extern volatile __bit RC7 __at(0x3F);
[; ;pic16f877a.h: 2728: extern volatile __bit RC8_9 __at(0xC6);
[; ;pic16f877a.h: 2731: extern volatile __bit RC9 __at(0xC6);
[; ;pic16f877a.h: 2734: extern volatile __bit RCD8 __at(0xC0);
[; ;pic16f877a.h: 2737: extern volatile __bit RCEN __at(0x48B);
[; ;pic16f877a.h: 2740: extern volatile __bit RCIE __at(0x465);
[; ;pic16f877a.h: 2743: extern volatile __bit RCIF __at(0x65);
[; ;pic16f877a.h: 2746: extern volatile __bit RD __at(0xC60);
[; ;pic16f877a.h: 2749: extern volatile __bit RD0 __at(0x40);
[; ;pic16f877a.h: 2752: extern volatile __bit RD1 __at(0x41);
[; ;pic16f877a.h: 2755: extern volatile __bit RD2 __at(0x42);
[; ;pic16f877a.h: 2758: extern volatile __bit RD3 __at(0x43);
[; ;pic16f877a.h: 2761: extern volatile __bit RD4 __at(0x44);
[; ;pic16f877a.h: 2764: extern volatile __bit RD5 __at(0x45);
[; ;pic16f877a.h: 2767: extern volatile __bit RD6 __at(0x46);
[; ;pic16f877a.h: 2770: extern volatile __bit RD7 __at(0x47);
[; ;pic16f877a.h: 2773: extern volatile __bit RE0 __at(0x48);
[; ;pic16f877a.h: 2776: extern volatile __bit RE1 __at(0x49);
[; ;pic16f877a.h: 2779: extern volatile __bit RE2 __at(0x4A);
[; ;pic16f877a.h: 2782: extern volatile __bit READ_WRITE __at(0x4A2);
[; ;pic16f877a.h: 2785: extern volatile __bit RP0 __at(0x1D);
[; ;pic16f877a.h: 2788: extern volatile __bit RP1 __at(0x1E);
[; ;pic16f877a.h: 2791: extern volatile __bit RSEN __at(0x489);
[; ;pic16f877a.h: 2794: extern volatile __bit RX9 __at(0xC6);
[; ;pic16f877a.h: 2797: extern volatile __bit RX9D __at(0xC0);
[; ;pic16f877a.h: 2800: extern volatile __bit R_W __at(0x4A2);
[; ;pic16f877a.h: 2803: extern volatile __bit R_nW __at(0x4A2);
[; ;pic16f877a.h: 2806: extern volatile __bit SEN __at(0x488);
[; ;pic16f877a.h: 2809: extern volatile __bit SMP __at(0x4A7);
[; ;pic16f877a.h: 2812: extern volatile __bit SPEN __at(0xC7);
[; ;pic16f877a.h: 2815: extern volatile __bit SREN __at(0xC5);
[; ;pic16f877a.h: 2818: extern volatile __bit SSPEN __at(0xA5);
[; ;pic16f877a.h: 2821: extern volatile __bit SSPIE __at(0x463);
[; ;pic16f877a.h: 2824: extern volatile __bit SSPIF __at(0x63);
[; ;pic16f877a.h: 2827: extern volatile __bit SSPM0 __at(0xA0);
[; ;pic16f877a.h: 2830: extern volatile __bit SSPM1 __at(0xA1);
[; ;pic16f877a.h: 2833: extern volatile __bit SSPM2 __at(0xA2);
[; ;pic16f877a.h: 2836: extern volatile __bit SSPM3 __at(0xA3);
[; ;pic16f877a.h: 2839: extern volatile __bit SSPOV __at(0xA6);
[; ;pic16f877a.h: 2842: extern volatile __bit SYNC __at(0x4C4);
[; ;pic16f877a.h: 2845: extern volatile __bit T0CS __at(0x40D);
[; ;pic16f877a.h: 2848: extern volatile __bit T0IE __at(0x5D);
[; ;pic16f877a.h: 2851: extern volatile __bit T0IF __at(0x5A);
[; ;pic16f877a.h: 2854: extern volatile __bit T0SE __at(0x40C);
[; ;pic16f877a.h: 2857: extern volatile __bit T1CKPS0 __at(0x84);
[; ;pic16f877a.h: 2860: extern volatile __bit T1CKPS1 __at(0x85);
[; ;pic16f877a.h: 2863: extern volatile __bit T1INSYNC __at(0x82);
[; ;pic16f877a.h: 2866: extern volatile __bit T1OSCEN __at(0x83);
[; ;pic16f877a.h: 2869: extern volatile __bit T1SYNC __at(0x82);
[; ;pic16f877a.h: 2872: extern volatile __bit T2CKPS0 __at(0x90);
[; ;pic16f877a.h: 2875: extern volatile __bit T2CKPS1 __at(0x91);
[; ;pic16f877a.h: 2878: extern volatile __bit TMR0IE __at(0x5D);
[; ;pic16f877a.h: 2881: extern volatile __bit TMR0IF __at(0x5A);
[; ;pic16f877a.h: 2884: extern volatile __bit TMR1CS __at(0x81);
[; ;pic16f877a.h: 2887: extern volatile __bit TMR1IE __at(0x460);
[; ;pic16f877a.h: 2890: extern volatile __bit TMR1IF __at(0x60);
[; ;pic16f877a.h: 2893: extern volatile __bit TMR1ON __at(0x80);
[; ;pic16f877a.h: 2896: extern volatile __bit TMR2IE __at(0x461);
[; ;pic16f877a.h: 2899: extern volatile __bit TMR2IF __at(0x61);
[; ;pic16f877a.h: 2902: extern volatile __bit TMR2ON __at(0x92);
[; ;pic16f877a.h: 2905: extern volatile __bit TOUTPS0 __at(0x93);
[; ;pic16f877a.h: 2908: extern volatile __bit TOUTPS1 __at(0x94);
[; ;pic16f877a.h: 2911: extern volatile __bit TOUTPS2 __at(0x95);
[; ;pic16f877a.h: 2914: extern volatile __bit TOUTPS3 __at(0x96);
[; ;pic16f877a.h: 2917: extern volatile __bit TRISA0 __at(0x428);
[; ;pic16f877a.h: 2920: extern volatile __bit TRISA1 __at(0x429);
[; ;pic16f877a.h: 2923: extern volatile __bit TRISA2 __at(0x42A);
[; ;pic16f877a.h: 2926: extern volatile __bit TRISA3 __at(0x42B);
[; ;pic16f877a.h: 2929: extern volatile __bit TRISA4 __at(0x42C);
[; ;pic16f877a.h: 2932: extern volatile __bit TRISA5 __at(0x42D);
[; ;pic16f877a.h: 2935: extern volatile __bit TRISB0 __at(0x430);
[; ;pic16f877a.h: 2938: extern volatile __bit TRISB1 __at(0x431);
[; ;pic16f877a.h: 2941: extern volatile __bit TRISB2 __at(0x432);
[; ;pic16f877a.h: 2944: extern volatile __bit TRISB3 __at(0x433);
[; ;pic16f877a.h: 2947: extern volatile __bit TRISB4 __at(0x434);
[; ;pic16f877a.h: 2950: extern volatile __bit TRISB5 __at(0x435);
[; ;pic16f877a.h: 2953: extern volatile __bit TRISB6 __at(0x436);
[; ;pic16f877a.h: 2956: extern volatile __bit TRISB7 __at(0x437);
[; ;pic16f877a.h: 2959: extern volatile __bit TRISC0 __at(0x438);
[; ;pic16f877a.h: 2962: extern volatile __bit TRISC1 __at(0x439);
[; ;pic16f877a.h: 2965: extern volatile __bit TRISC2 __at(0x43A);
[; ;pic16f877a.h: 2968: extern volatile __bit TRISC3 __at(0x43B);
[; ;pic16f877a.h: 2971: extern volatile __bit TRISC4 __at(0x43C);
[; ;pic16f877a.h: 2974: extern volatile __bit TRISC5 __at(0x43D);
[; ;pic16f877a.h: 2977: extern volatile __bit TRISC6 __at(0x43E);
[; ;pic16f877a.h: 2980: extern volatile __bit TRISC7 __at(0x43F);
[; ;pic16f877a.h: 2983: extern volatile __bit TRISD0 __at(0x440);
[; ;pic16f877a.h: 2986: extern volatile __bit TRISD1 __at(0x441);
[; ;pic16f877a.h: 2989: extern volatile __bit TRISD2 __at(0x442);
[; ;pic16f877a.h: 2992: extern volatile __bit TRISD3 __at(0x443);
[; ;pic16f877a.h: 2995: extern volatile __bit TRISD4 __at(0x444);
[; ;pic16f877a.h: 2998: extern volatile __bit TRISD5 __at(0x445);
[; ;pic16f877a.h: 3001: extern volatile __bit TRISD6 __at(0x446);
[; ;pic16f877a.h: 3004: extern volatile __bit TRISD7 __at(0x447);
[; ;pic16f877a.h: 3007: extern volatile __bit TRISE0 __at(0x448);
[; ;pic16f877a.h: 3010: extern volatile __bit TRISE1 __at(0x449);
[; ;pic16f877a.h: 3013: extern volatile __bit TRISE2 __at(0x44A);
[; ;pic16f877a.h: 3016: extern volatile __bit TRMT __at(0x4C1);
[; ;pic16f877a.h: 3019: extern volatile __bit TX8_9 __at(0x4C6);
[; ;pic16f877a.h: 3022: extern volatile __bit TX9 __at(0x4C6);
[; ;pic16f877a.h: 3025: extern volatile __bit TX9D __at(0x4C0);
[; ;pic16f877a.h: 3028: extern volatile __bit TXD8 __at(0x4C0);
[; ;pic16f877a.h: 3031: extern volatile __bit TXEN __at(0x4C5);
[; ;pic16f877a.h: 3034: extern volatile __bit TXIE __at(0x464);
[; ;pic16f877a.h: 3037: extern volatile __bit TXIF __at(0x64);
[; ;pic16f877a.h: 3040: extern volatile __bit UA __at(0x4A1);
[; ;pic16f877a.h: 3043: extern volatile __bit WCOL __at(0xA7);
[; ;pic16f877a.h: 3046: extern volatile __bit WR __at(0xC61);
[; ;pic16f877a.h: 3049: extern volatile __bit WREN __at(0xC62);
[; ;pic16f877a.h: 3052: extern volatile __bit WRERR __at(0xC63);
[; ;pic16f877a.h: 3055: extern volatile __bit ZERO __at(0x1A);
[; ;pic16f877a.h: 3058: extern volatile __bit nA __at(0x4A5);
[; ;pic16f877a.h: 3061: extern volatile __bit nADDRESS __at(0x4A5);
[; ;pic16f877a.h: 3064: extern volatile __bit nBO __at(0x470);
[; ;pic16f877a.h: 3067: extern volatile __bit nBOR __at(0x470);
[; ;pic16f877a.h: 3070: extern volatile __bit nDONE __at(0xFA);
[; ;pic16f877a.h: 3073: extern volatile __bit nPD __at(0x1B);
[; ;pic16f877a.h: 3076: extern volatile __bit nPOR __at(0x471);
[; ;pic16f877a.h: 3079: extern volatile __bit nRBPU __at(0x40F);
[; ;pic16f877a.h: 3082: extern volatile __bit nRC8 __at(0xC6);
[; ;pic16f877a.h: 3085: extern volatile __bit nT1SYNC __at(0x82);
[; ;pic16f877a.h: 3088: extern volatile __bit nTO __at(0x1C);
[; ;pic16f877a.h: 3091: extern volatile __bit nTX8 __at(0x4C6);
[; ;pic16f877a.h: 3094: extern volatile __bit nW __at(0x4A2);
[; ;pic16f877a.h: 3097: extern volatile __bit nWRITE __at(0x4A2);
[; ;pic.h: 31: extern void __nop(void);
[; ;pic.h: 78: __attribute__((__unsupported__("The " "FLASH_READ" " macro function is no longer supported. Please use the MPLAB X MCC."))) unsigned char __flash_read(unsigned short addr);
[; ;pic.h: 80: __attribute__((__unsupported__("The " "FLASH_WRITE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_write(unsigned short addr, unsigned short data);
[; ;pic.h: 82: __attribute__((__unsupported__("The " "FLASH_ERASE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;pic.h: 92: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 94: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 137: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 138: extern __bank0 __bit __powerdown;
[; ;pic.h: 139: extern __bank0 __bit __timeout;
"7 config.h
[p x FOSC=HS ]
"8
[p x WDTE=OFF ]
"9
[p x PWRTE=OFF ]
"10
[p x BOREN=OFF ]
"11
[p x LVP=OFF ]
"12
[p x CPD=OFF ]
"13
[p x WRT=OFF ]
"14
[p x CP=OFF ]
"2 uart.h
[v _UART_init `(v ~T0 @X0 1 ef ]
"3
{
[; ;uart.h: 2: void UART_init(void)
[; ;uart.h: 3: {
[e :U _UART_init ]
[f ]
[; ;uart.h: 5: TRISC6 = 0;
"5
[e = _TRISC6 -> -> 0 `i `b ]
[; ;uart.h: 6: TRISC7 = 1;
"6
[e = _TRISC7 -> -> 1 `i `b ]
[; ;uart.h: 10: SPBRG = ((20000000/16)/9600) - 1;
"10
[e = _SPBRG -> - / / -> 20000000 `l -> -> 16 `i `l -> -> 9600 `i `l -> -> 1 `i `l `uc ]
[; ;uart.h: 11: BRGH = 1;
"11
[e = _BRGH -> -> 1 `i `b ]
[; ;uart.h: 14: SYNC = 0;
"14
[e = _SYNC -> -> 0 `i `b ]
[; ;uart.h: 15: SPEN = 1;
"15
[e = _SPEN -> -> 1 `i `b ]
[; ;uart.h: 18: TXEN = 1;
"18
[e = _TXEN -> -> 1 `i `b ]
[; ;uart.h: 19: CREN = 1;
"19
[e = _CREN -> -> 1 `i `b ]
[; ;uart.h: 22: TX9 = 0;
"22
[e = _TX9 -> -> 0 `i `b ]
[; ;uart.h: 23: RX9 = 0;
"23
[e = _RX9 -> -> 0 `i `b ]
[; ;uart.h: 24: }
"24
[e :UE 100 ]
}
"27
[v _UART_send_char `(v ~T0 @X0 1 ef1`uc ]
"28
{
[; ;uart.h: 27: void UART_send_char(char bt)
[; ;uart.h: 28: {
[e :U _UART_send_char ]
"27
[v _bt `uc ~T0 @X0 1 r1 ]
"28
[f ]
[; ;uart.h: 29: while(!TXIF);
"29
[e $U 102  ]
[e :U 103 ]
[e :U 102 ]
[e $ ! _TXIF 103  ]
[e :U 104 ]
[; ;uart.h: 30: TXREG = bt;
"30
[e = _TXREG _bt ]
[; ;uart.h: 31: }
"31
[e :UE 101 ]
}
"34
[v _UART_send_string `(v ~T0 @X0 1 ef1`*uc ]
"35
{
[; ;uart.h: 34: void UART_send_string(char* st_pt)
[; ;uart.h: 35: {
[e :U _UART_send_string ]
"34
[v _st_pt `*uc ~T0 @X0 1 r1 ]
"35
[f ]
[; ;uart.h: 36: while(*st_pt)
"36
[e $U 106  ]
[e :U 107 ]
[; ;uart.h: 37: UART_send_char(*st_pt++);
"37
[e ( _UART_send_char (1 *U ++ _st_pt * -> -> 1 `i `x -> -> # *U _st_pt `i `x ]
[e :U 106 ]
"36
[e $ != -> *U _st_pt `i -> -> -> 0 `i `uc `i 107  ]
[e :U 108 ]
[; ;uart.h: 38: }
"38
[e :UE 105 ]
}
"41
[v _UART_get_char `(uc ~T0 @X0 1 ef ]
"42
{
[; ;uart.h: 41: char UART_get_char()
[; ;uart.h: 42: {
[e :U _UART_get_char ]
[f ]
[; ;uart.h: 43: if(OERR)
"43
[e $ ! _OERR 110  ]
[; ;uart.h: 44: {
"44
{
[; ;uart.h: 45: CREN = 0;
"45
[e = _CREN -> -> 0 `i `b ]
[; ;uart.h: 46: CREN = 1;
"46
[e = _CREN -> -> 1 `i `b ]
"47
}
[e :U 110 ]
[; ;uart.h: 47: }
[; ;uart.h: 49: while(!RCIF);
"49
[e $U 111  ]
[e :U 112 ]
[e :U 111 ]
[e $ ! _RCIF 112  ]
[e :U 113 ]
[; ;uart.h: 51: return RCREG;
"51
[e ) _RCREG ]
[e $UE 109  ]
[; ;uart.h: 52: }
"52
[e :UE 109 ]
}
"3 pwm.h
[v _frequency `l ~T0 @X0 1 e ]
[; ;pwm.h: 3: long frequency;
"4
[v _PWM_Max_Duty `(i ~T0 @X0 1 ef ]
"5
{
[; ;pwm.h: 4: int PWM_Max_Duty()
[; ;pwm.h: 5: {
[e :U _PWM_Max_Duty ]
[f ]
[; ;pwm.h: 6: return(20000000/(frequency*4));
"6
[e ) -> / -> 20000000 `l * _frequency -> -> 4 `i `l `i ]
[e $UE 114  ]
[; ;pwm.h: 7: }
"7
[e :UE 114 ]
}
"9
[v _PWM1_init `(v ~T0 @X0 1 ef1`l ]
"10
{
[; ;pwm.h: 9: void PWM1_init(long freq)
[; ;pwm.h: 10: {
[e :U _PWM1_init ]
"9
[v _freq `l ~T0 @X0 1 r1 ]
"10
[f ]
[; ;pwm.h: 11: PR2 = (20000000/(freq*4*4)) - 1;
"11
[e = _PR2 -> - / -> 20000000 `l * * _freq -> -> 4 `i `l -> -> 4 `i `l -> -> 1 `i `l `uc ]
[; ;pwm.h: 12: frequency = freq;
"12
[e = _frequency _freq ]
[; ;pwm.h: 13: }
"13
[e :UE 115 ]
}
"15
[v _PWM2_init `(v ~T0 @X0 1 ef1`l ]
"16
{
[; ;pwm.h: 15: void PWM2_init(long freq)
[; ;pwm.h: 16: {
[e :U _PWM2_init ]
"15
[v _freq `l ~T0 @X0 1 r1 ]
"16
[f ]
[; ;pwm.h: 17: PR2 = (20000000/(freq*4*4)) - 1;
"17
[e = _PR2 -> - / -> 20000000 `l * * _freq -> -> 4 `i `l -> -> 4 `i `l -> -> 1 `i `l `uc ]
[; ;pwm.h: 18: frequency = freq;
"18
[e = _frequency _freq ]
[; ;pwm.h: 19: }
"19
[e :UE 116 ]
}
"21
[v _PWM1_Set_duty `(v ~T0 @X0 1 ef1`ui ]
"22
{
[; ;pwm.h: 21: void PWM1_Set_duty(unsigned int duty)
[; ;pwm.h: 22: {
[e :U _PWM1_Set_duty ]
"21
[v _duty `ui ~T0 @X0 1 r1 ]
"22
[f ]
[; ;pwm.h: 23: duty = ((float)duty/100) * 1023;
"23
[e = _duty -> * / -> _duty `f -> -> 100 `i `f -> -> 1023 `i `f `ui ]
[; ;pwm.h: 24: if(duty<1024)
"24
[e $ ! < _duty -> -> 1024 `i `ui 118  ]
[; ;pwm.h: 25: {
"25
{
[; ;pwm.h: 26: duty = ((float)duty/1023)*PWM_Max_Duty();
"26
[e = _duty -> * / -> _duty `f -> -> 1023 `i `f -> ( _PWM_Max_Duty ..  `f `ui ]
[; ;pwm.h: 27: CCP1CONbits.CCP1X = duty & 0x02;
"27
[e = . . _CCP1CONbits 0 2 -> & _duty -> -> 2 `i `ui `uc ]
[; ;pwm.h: 28: CCP1CONbits.CCP1Y = duty & 0x01;
"28
[e = . . _CCP1CONbits 0 1 -> & _duty -> -> 1 `i `ui `uc ]
[; ;pwm.h: 29: CCPR1L = duty>>0x02;
"29
[e = _CCPR1L -> >> _duty -> 2 `i `uc ]
"30
}
[e :U 118 ]
[; ;pwm.h: 30: }
[; ;pwm.h: 32: }
"32
[e :UE 117 ]
}
"34
[v _PWM2_Set_duty `(v ~T0 @X0 1 ef1`ui ]
"35
{
[; ;pwm.h: 34: void PWM2_Set_duty(unsigned int duty)
[; ;pwm.h: 35: {
[e :U _PWM2_Set_duty ]
"34
[v _duty `ui ~T0 @X0 1 r1 ]
"35
[f ]
[; ;pwm.h: 36: duty = ((float)duty/100) * 1023;
"36
[e = _duty -> * / -> _duty `f -> -> 100 `i `f -> -> 1023 `i `f `ui ]
[; ;pwm.h: 37: if(duty<1024)
"37
[e $ ! < _duty -> -> 1024 `i `ui 120  ]
[; ;pwm.h: 38: {
"38
{
[; ;pwm.h: 39: duty = ((float)duty/1023)*PWM_Max_Duty();
"39
[e = _duty -> * / -> _duty `f -> -> 1023 `i `f -> ( _PWM_Max_Duty ..  `f `ui ]
[; ;pwm.h: 40: CCP2CONbits.CCP2X = duty & 0x02;
"40
[e = . . _CCP2CONbits 0 2 -> & _duty -> -> 2 `i `ui `uc ]
[; ;pwm.h: 41: CCP2CONbits.CCP2Y = duty & 0x01;
"41
[e = . . _CCP2CONbits 0 1 -> & _duty -> -> 1 `i `ui `uc ]
[; ;pwm.h: 42: CCPR2L = duty>>0x02;
"42
[e = _CCPR2L -> >> _duty -> 2 `i `uc ]
"43
}
[e :U 120 ]
[; ;pwm.h: 43: }
[; ;pwm.h: 44: }
"44
[e :UE 119 ]
}
"46
[v _PWM1_start `(v ~T0 @X0 1 ef ]
"47
{
[; ;pwm.h: 46: void PWM1_start()
[; ;pwm.h: 47: {
[e :U _PWM1_start ]
[f ]
[; ;pwm.h: 48: CCP1CONbits.CCP1M3 = 1;
"48
[e = . . _CCP1CONbits 1 3 -> -> 1 `i `uc ]
[; ;pwm.h: 49: CCP1CONbits.CCP1M2 = 1;
"49
[e = . . _CCP1CONbits 1 2 -> -> 1 `i `uc ]
[; ;pwm.h: 62: T2CONbits.TMR2ON = 1;
"62
[e = . . _T2CONbits 0 1 -> -> 1 `i `uc ]
[; ;pwm.h: 63: TRISC2 = 0;
"63
[e = _TRISC2 -> -> 0 `i `b ]
[; ;pwm.h: 64: }
"64
[e :UE 121 ]
}
"66
[v _PWM1_stop `(i ~T0 @X0 1 ef ]
"67
{
[; ;pwm.h: 66: PWM1_stop()
[; ;pwm.h: 67: {
[e :U _PWM1_stop ]
[f ]
[; ;pwm.h: 68: CCP1CONbits.CCP1M3 = 0;
"68
[e = . . _CCP1CONbits 1 3 -> -> 0 `i `uc ]
[; ;pwm.h: 69: CCP1CONbits.CCP1M2 = 0;
"69
[e = . . _CCP1CONbits 1 2 -> -> 0 `i `uc ]
[; ;pwm.h: 70: }
"70
[e :UE 122 ]
}
"72
[v _PWM2_start `(i ~T0 @X0 1 ef ]
"73
{
[; ;pwm.h: 72: PWM2_start()
[; ;pwm.h: 73: {
[e :U _PWM2_start ]
[f ]
[; ;pwm.h: 74: CCP2CONbits.CCP2M3 = 1;
"74
[e = . . _CCP2CONbits 1 3 -> -> 1 `i `uc ]
[; ;pwm.h: 75: CCP2CONbits.CCP2M2 = 1;
"75
[e = . . _CCP2CONbits 1 2 -> -> 1 `i `uc ]
[; ;pwm.h: 87: T2CONbits.TMR2ON = 1;
"87
[e = . . _T2CONbits 0 1 -> -> 1 `i `uc ]
[; ;pwm.h: 88: TRISC1 = 0;
"88
[e = _TRISC1 -> -> 0 `i `b ]
[; ;pwm.h: 89: }
"89
[e :UE 123 ]
}
"91
[v _PWM2_stop `(i ~T0 @X0 1 ef ]
"92
{
[; ;pwm.h: 91: PWM2_stop()
[; ;pwm.h: 92: {
[e :U _PWM2_stop ]
[f ]
[; ;pwm.h: 93: CCP2CONbits.CCP2M3 = 0;
"93
[e = . . _CCP2CONbits 1 3 -> -> 0 `i `uc ]
[; ;pwm.h: 94: CCP2CONbits.CCP2M2 = 0;
"94
[e = . . _CCP2CONbits 1 2 -> -> 0 `i `uc ]
[; ;pwm.h: 95: }
"95
[e :UE 124 ]
}
"1 keypad.h
[v _Keypad_init `(v ~T0 @X0 1 ef ]
"2
{
[; ;keypad.h: 1: void Keypad_init()
[; ;keypad.h: 2: {
[e :U _Keypad_init ]
[f ]
[; ;keypad.h: 3: PORTB = 0x00;
"3
[e = _PORTB -> -> 0 `i `uc ]
[; ;keypad.h: 4: TRISB1 = TRISB2 = TRISB3 = 0;
"4
[e = _TRISB1 = _TRISB2 = _TRISB3 -> -> 0 `i `b ]
[; ;keypad.h: 5: TRISC3 = 0;
"5
[e = _TRISC3 -> -> 0 `i `b ]
[; ;keypad.h: 6: TRISB4 = TRISB5 = TRISB6 = TRISB7 = 1;
"6
[e = _TRISB4 = _TRISB5 = _TRISB6 = _TRISB7 -> -> 1 `i `b ]
[; ;keypad.h: 7: OPTION_REG &= 0x7F;
"7
[e =& _OPTION_REG -> -> 127 `i `uc ]
[; ;keypad.h: 8: }
"8
[e :UE 125 ]
}
"9
[v _keypad_scanner `(uc ~T0 @X0 1 ef ]
"10
{
[; ;keypad.h: 9: char keypad_scanner()
[; ;keypad.h: 10: {
[e :U _keypad_scanner ]
[f ]
[; ;keypad.h: 11: RC3 = 0; RB1 = 1; RB2 = 1; RB3 = 1;
"11
[e = _RC3 -> -> 0 `i `b ]
[e = _RB1 -> -> 1 `i `b ]
[e = _RB2 -> -> 1 `i `b ]
[e = _RB3 -> -> 1 `i `b ]
[; ;keypad.h: 12: if (RB4 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB4==0); return '1'; }
"12
[e $ ! == -> _RB4 `i -> 0 `i 127  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 128  ]
[e :U 129 ]
[e :U 128 ]
[e $ == -> _RB4 `i -> 0 `i 129  ]
[e :U 130 ]
[e ) -> -> 49 `ui `uc ]
[e $UE 126  ]
}
[e :U 127 ]
[; ;keypad.h: 13: if (RB5 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB5==0); return '2'; }
"13
[e $ ! == -> _RB5 `i -> 0 `i 131  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 132  ]
[e :U 133 ]
[e :U 132 ]
[e $ == -> _RB5 `i -> 0 `i 133  ]
[e :U 134 ]
[e ) -> -> 50 `ui `uc ]
[e $UE 126  ]
}
[e :U 131 ]
[; ;keypad.h: 14: if (RB6 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB6==0); return '3'; }
"14
[e $ ! == -> _RB6 `i -> 0 `i 135  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 136  ]
[e :U 137 ]
[e :U 136 ]
[e $ == -> _RB6 `i -> 0 `i 137  ]
[e :U 138 ]
[e ) -> -> 51 `ui `uc ]
[e $UE 126  ]
}
[e :U 135 ]
[; ;keypad.h: 15: if (RB7 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB7==0); return 'A'; }
"15
[e $ ! == -> _RB7 `i -> 0 `i 139  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 140  ]
[e :U 141 ]
[e :U 140 ]
[e $ == -> _RB7 `i -> 0 `i 141  ]
[e :U 142 ]
[e ) -> -> 65 `ui `uc ]
[e $UE 126  ]
}
[e :U 139 ]
[; ;keypad.h: 17: RC3 = 1; RB1 = 0; RB2 = 1; RB3 = 1;
"17
[e = _RC3 -> -> 1 `i `b ]
[e = _RB1 -> -> 0 `i `b ]
[e = _RB2 -> -> 1 `i `b ]
[e = _RB3 -> -> 1 `i `b ]
[; ;keypad.h: 18: if (RB4 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB4==0); return '6'; }
"18
[e $ ! == -> _RB4 `i -> 0 `i 143  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 144  ]
[e :U 145 ]
[e :U 144 ]
[e $ == -> _RB4 `i -> 0 `i 145  ]
[e :U 146 ]
[e ) -> -> 54 `ui `uc ]
[e $UE 126  ]
}
[e :U 143 ]
[; ;keypad.h: 19: if (RB5 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB5==0); return '5'; }
"19
[e $ ! == -> _RB5 `i -> 0 `i 147  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 148  ]
[e :U 149 ]
[e :U 148 ]
[e $ == -> _RB5 `i -> 0 `i 149  ]
[e :U 150 ]
[e ) -> -> 53 `ui `uc ]
[e $UE 126  ]
}
[e :U 147 ]
[; ;keypad.h: 20: if (RB6 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB6==0); return '4'; }
"20
[e $ ! == -> _RB6 `i -> 0 `i 151  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 152  ]
[e :U 153 ]
[e :U 152 ]
[e $ == -> _RB6 `i -> 0 `i 153  ]
[e :U 154 ]
[e ) -> -> 52 `ui `uc ]
[e $UE 126  ]
}
[e :U 151 ]
[; ;keypad.h: 21: if (RB7 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB7==0); return 'B'; }
"21
[e $ ! == -> _RB7 `i -> 0 `i 155  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 156  ]
[e :U 157 ]
[e :U 156 ]
[e $ == -> _RB7 `i -> 0 `i 157  ]
[e :U 158 ]
[e ) -> -> 66 `ui `uc ]
[e $UE 126  ]
}
[e :U 155 ]
[; ;keypad.h: 23: RC3 = 1; RB1 = 1; RB2 = 0; RB3 = 1;
"23
[e = _RC3 -> -> 1 `i `b ]
[e = _RB1 -> -> 1 `i `b ]
[e = _RB2 -> -> 0 `i `b ]
[e = _RB3 -> -> 1 `i `b ]
[; ;keypad.h: 24: if (RB4 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB4==0); return '7'; }
"24
[e $ ! == -> _RB4 `i -> 0 `i 159  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 160  ]
[e :U 161 ]
[e :U 160 ]
[e $ == -> _RB4 `i -> 0 `i 161  ]
[e :U 162 ]
[e ) -> -> 55 `ui `uc ]
[e $UE 126  ]
}
[e :U 159 ]
[; ;keypad.h: 25: if (RB5 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB5==0); return '8'; }
"25
[e $ ! == -> _RB5 `i -> 0 `i 163  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 164  ]
[e :U 165 ]
[e :U 164 ]
[e $ == -> _RB5 `i -> 0 `i 165  ]
[e :U 166 ]
[e ) -> -> 56 `ui `uc ]
[e $UE 126  ]
}
[e :U 163 ]
[; ;keypad.h: 26: if (RB6 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB6==0); return '9'; }
"26
[e $ ! == -> _RB6 `i -> 0 `i 167  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 168  ]
[e :U 169 ]
[e :U 168 ]
[e $ == -> _RB6 `i -> 0 `i 169  ]
[e :U 170 ]
[e ) -> -> 57 `ui `uc ]
[e $UE 126  ]
}
[e :U 167 ]
[; ;keypad.h: 27: if (RB7 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB7==0); return 'C'; }
"27
[e $ ! == -> _RB7 `i -> 0 `i 171  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 172  ]
[e :U 173 ]
[e :U 172 ]
[e $ == -> _RB7 `i -> 0 `i 173  ]
[e :U 174 ]
[e ) -> -> 67 `ui `uc ]
[e $UE 126  ]
}
[e :U 171 ]
[; ;keypad.h: 29: RC3 = 1; RB1 = 1; RB2 = 1; RB3 = 0;
"29
[e = _RC3 -> -> 1 `i `b ]
[e = _RB1 -> -> 1 `i `b ]
[e = _RB2 -> -> 1 `i `b ]
[e = _RB3 -> -> 0 `i `b ]
[; ;keypad.h: 30: if (RB4 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB4==0); return '*'; }
"30
[e $ ! == -> _RB4 `i -> 0 `i 175  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 176  ]
[e :U 177 ]
[e :U 176 ]
[e $ == -> _RB4 `i -> 0 `i 177  ]
[e :U 178 ]
[e ) -> -> 42 `ui `uc ]
[e $UE 126  ]
}
[e :U 175 ]
[; ;keypad.h: 31: if (RB5 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB5==0); return '0'; }
"31
[e $ ! == -> _RB5 `i -> 0 `i 179  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 180  ]
[e :U 181 ]
[e :U 180 ]
[e $ == -> _RB5 `i -> 0 `i 181  ]
[e :U 182 ]
[e ) -> -> 48 `ui `uc ]
[e $UE 126  ]
}
[e :U 179 ]
[; ;keypad.h: 32: if (RB6 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB6==0); return '#'; }
"32
[e $ ! == -> _RB6 `i -> 0 `i 183  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 184  ]
[e :U 185 ]
[e :U 184 ]
[e $ == -> _RB6 `i -> 0 `i 185  ]
[e :U 186 ]
[e ) -> -> 35 `ui `uc ]
[e $UE 126  ]
}
[e :U 183 ]
[; ;keypad.h: 33: if (RB7 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); while (RB7==0); return 'D'; }
"33
[e $ ! == -> _RB7 `i -> 0 `i 187  ]
{
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[e $U 188  ]
[e :U 189 ]
[e :U 188 ]
[e $ == -> _RB7 `i -> 0 `i 189  ]
[e :U 190 ]
[e ) -> -> 68 `ui `uc ]
[e $UE 126  ]
}
[e :U 187 ]
[; ;keypad.h: 35: return 'n';
"35
[e ) -> -> 110 `ui `uc ]
[e $UE 126  ]
[; ;keypad.h: 36: }
"36
[e :UE 126 ]
}
"38
[v _switch_press_scan `(uc ~T0 @X0 1 ef ]
"39
{
[; ;keypad.h: 38: char switch_press_scan()
[; ;keypad.h: 39: {
[e :U _switch_press_scan ]
[f ]
"40
[v _key `uc ~T0 @X0 1 a ]
[; ;keypad.h: 40: char key = 'n';
[e = _key -> -> 110 `ui `uc ]
[; ;keypad.h: 41: while(key =='n')
"41
[e $U 192  ]
[e :U 193 ]
[; ;keypad.h: 42: key = keypad_scanner();
"42
[e = _key ( _keypad_scanner ..  ]
[e :U 192 ]
"41
[e $ == -> _key `ui -> 110 `ui 193  ]
[e :U 194 ]
[; ;keypad.h: 43: return key;
"43
[e ) _key ]
[e $UE 191  ]
[; ;keypad.h: 44: }
"44
[e :UE 191 ]
}
"1 lcd.h
[v _Lcd_Port `(v ~T0 @X0 1 ef1`uc ]
"2
{
[; ;lcd.h: 1: void Lcd_Port(char a)
[; ;lcd.h: 2: {
[e :U _Lcd_Port ]
"1
[v _a `uc ~T0 @X0 1 r1 ]
"2
[f ]
[; ;lcd.h: 3: if(a & 1)
"3
[e $ ! != & -> _a `i -> 1 `i -> 0 `i 196  ]
[; ;lcd.h: 4: RD4 = 1;
"4
[e = _RD4 -> -> 1 `i `b ]
[e $U 197  ]
"5
[e :U 196 ]
[; ;lcd.h: 5: else
[; ;lcd.h: 6: RD4 = 0;
"6
[e = _RD4 -> -> 0 `i `b ]
[e :U 197 ]
[; ;lcd.h: 8: if(a & 2)
"8
[e $ ! != & -> _a `i -> 2 `i -> 0 `i 198  ]
[; ;lcd.h: 9: RD5 = 1;
"9
[e = _RD5 -> -> 1 `i `b ]
[e $U 199  ]
"10
[e :U 198 ]
[; ;lcd.h: 10: else
[; ;lcd.h: 11: RD5 = 0;
"11
[e = _RD5 -> -> 0 `i `b ]
[e :U 199 ]
[; ;lcd.h: 13: if(a & 4)
"13
[e $ ! != & -> _a `i -> 4 `i -> 0 `i 200  ]
[; ;lcd.h: 14: RD6 = 1;
"14
[e = _RD6 -> -> 1 `i `b ]
[e $U 201  ]
"15
[e :U 200 ]
[; ;lcd.h: 15: else
[; ;lcd.h: 16: RD6 = 0;
"16
[e = _RD6 -> -> 0 `i `b ]
[e :U 201 ]
[; ;lcd.h: 18: if(a & 8)
"18
[e $ ! != & -> _a `i -> 8 `i -> 0 `i 202  ]
[; ;lcd.h: 19: RD7 = 1;
"19
[e = _RD7 -> -> 1 `i `b ]
[e $U 203  ]
"20
[e :U 202 ]
[; ;lcd.h: 20: else
[; ;lcd.h: 21: RD7 = 0;
"21
[e = _RD7 -> -> 0 `i `b ]
[e :U 203 ]
[; ;lcd.h: 22: }
"22
[e :UE 195 ]
}
"23
[v _Lcd_Cmd `(v ~T0 @X0 1 ef1`uc ]
"24
{
[; ;lcd.h: 23: void Lcd_Cmd(char a)
[; ;lcd.h: 24: {
[e :U _Lcd_Cmd ]
"23
[v _a `uc ~T0 @X0 1 r1 ]
"24
[f ]
[; ;lcd.h: 25: RD2 = 0;
"25
[e = _RD2 -> -> 0 `i `b ]
[; ;lcd.h: 27: Lcd_Port(a);
"27
[e ( _Lcd_Port (1 _a ]
[; ;lcd.h: 28: RD3 = 1;
"28
[e = _RD3 -> -> 1 `i `b ]
[; ;lcd.h: 29: _delay((unsigned long)((4)*(20000000/4000.0)));
"29
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;lcd.h: 30: RD3 = 0;
"30
[e = _RD3 -> -> 0 `i `b ]
[; ;lcd.h: 31: }
"31
[e :UE 204 ]
}
"33
[v _Lcd_Clear `(i ~T0 @X0 1 ef ]
"34
{
[; ;lcd.h: 33: Lcd_Clear()
[; ;lcd.h: 34: {
[e :U _Lcd_Clear ]
[f ]
[; ;lcd.h: 35: Lcd_Cmd(0);
"35
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;lcd.h: 36: Lcd_Cmd(1);
"36
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
[; ;lcd.h: 37: }
"37
[e :UE 205 ]
}
"39
[v _Lcd_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
"40
{
[; ;lcd.h: 39: void Lcd_Set_Cursor(char a, char b)
[; ;lcd.h: 40: {
[e :U _Lcd_Set_Cursor ]
"39
[v _a `uc ~T0 @X0 1 r1 ]
[v _b `uc ~T0 @X0 1 r2 ]
"40
[f ]
"41
[v _temp `uc ~T0 @X0 1 a ]
[v _z `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
[; ;lcd.h: 41: char temp,z,y;
[; ;lcd.h: 42: if(a == 1)
"42
[e $ ! == -> _a `i -> 1 `i 207  ]
[; ;lcd.h: 43: {
"43
{
[; ;lcd.h: 44: temp = 0x80 + b - 1;
"44
[e = _temp -> - + -> 128 `i -> _b `i -> 1 `i `uc ]
[; ;lcd.h: 45: z = temp>>4;
"45
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
[; ;lcd.h: 46: y = temp & 0x0F;
"46
[e = _y -> & -> _temp `i -> 15 `i `uc ]
[; ;lcd.h: 47: Lcd_Cmd(z);
"47
[e ( _Lcd_Cmd (1 _z ]
[; ;lcd.h: 48: Lcd_Cmd(y);
"48
[e ( _Lcd_Cmd (1 _y ]
"49
}
[; ;lcd.h: 49: }
[e $U 208  ]
"50
[e :U 207 ]
[; ;lcd.h: 50: else if(a == 2)
[e $ ! == -> _a `i -> 2 `i 209  ]
[; ;lcd.h: 51: {
"51
{
[; ;lcd.h: 52: temp = 0xC0 + b - 1;
"52
[e = _temp -> - + -> 192 `i -> _b `i -> 1 `i `uc ]
[; ;lcd.h: 53: z = temp>>4;
"53
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
[; ;lcd.h: 54: y = temp & 0x0F;
"54
[e = _y -> & -> _temp `i -> 15 `i `uc ]
[; ;lcd.h: 55: Lcd_Cmd(z);
"55
[e ( _Lcd_Cmd (1 _z ]
[; ;lcd.h: 56: Lcd_Cmd(y);
"56
[e ( _Lcd_Cmd (1 _y ]
"57
}
[e :U 209 ]
"58
[e :U 208 ]
[; ;lcd.h: 57: }
[; ;lcd.h: 58: }
[e :UE 206 ]
}
"60
[v _Lcd_Init `(v ~T0 @X0 1 ef ]
"61
{
[; ;lcd.h: 60: void Lcd_Init()
[; ;lcd.h: 61: {
[e :U _Lcd_Init ]
[f ]
[; ;lcd.h: 62: Lcd_Port(0x00);
"62
[e ( _Lcd_Port (1 -> -> 0 `i `uc ]
[; ;lcd.h: 63: _delay((unsigned long)((20)*(20000000/4000.0)));
"63
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;lcd.h: 64: Lcd_Cmd(0x03);
"64
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;lcd.h: 65: _delay((unsigned long)((5)*(20000000/4000.0)));
"65
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;lcd.h: 66: Lcd_Cmd(0x03);
"66
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;lcd.h: 67: _delay((unsigned long)((11)*(20000000/4000.0)));
"67
[e ( __delay (1 -> * -> -> 11 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;lcd.h: 68: Lcd_Cmd(0x03);
"68
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;lcd.h: 70: Lcd_Cmd(0x02);
"70
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
[; ;lcd.h: 71: Lcd_Cmd(0x02);
"71
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
[; ;lcd.h: 72: Lcd_Cmd(0x08);
"72
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
[; ;lcd.h: 73: Lcd_Cmd(0x00);
"73
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;lcd.h: 74: Lcd_Cmd(0x0C);
"74
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
[; ;lcd.h: 75: Lcd_Cmd(0x00);
"75
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;lcd.h: 76: Lcd_Cmd(0x06);
"76
[e ( _Lcd_Cmd (1 -> -> 6 `i `uc ]
[; ;lcd.h: 77: }
"77
[e :UE 210 ]
}
"79
[v _Lcd_Write_Char `(v ~T0 @X0 1 ef1`uc ]
"80
{
[; ;lcd.h: 79: void Lcd_Write_Char(char a)
[; ;lcd.h: 80: {
[e :U _Lcd_Write_Char ]
"79
[v _a `uc ~T0 @X0 1 r1 ]
"80
[f ]
"81
[v _temp `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
[; ;lcd.h: 81: char temp,y;
[; ;lcd.h: 82: temp = a&0x0F;
"82
[e = _temp -> & -> _a `i -> 15 `i `uc ]
[; ;lcd.h: 83: y = a&0xF0;
"83
[e = _y -> & -> _a `i -> 240 `i `uc ]
[; ;lcd.h: 84: RD2 = 1;
"84
[e = _RD2 -> -> 1 `i `b ]
[; ;lcd.h: 85: Lcd_Port(y>>4);
"85
[e ( _Lcd_Port (1 -> >> -> _y `i -> 4 `i `uc ]
[; ;lcd.h: 86: RD3 = 1;
"86
[e = _RD3 -> -> 1 `i `b ]
[; ;lcd.h: 87: _delay((unsigned long)((40)*(20000000/4000000.0)));
"87
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
[; ;lcd.h: 88: RD3 = 0;
"88
[e = _RD3 -> -> 0 `i `b ]
[; ;lcd.h: 89: Lcd_Port(temp);
"89
[e ( _Lcd_Port (1 _temp ]
[; ;lcd.h: 90: RD3 = 1;
"90
[e = _RD3 -> -> 1 `i `b ]
[; ;lcd.h: 91: _delay((unsigned long)((40)*(20000000/4000000.0)));
"91
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
[; ;lcd.h: 92: RD3 = 0;
"92
[e = _RD3 -> -> 0 `i `b ]
[; ;lcd.h: 93: }
"93
[e :UE 211 ]
}
"95
[v _Lcd_Write_String `(v ~T0 @X0 1 ef1`*uc ]
"96
{
[; ;lcd.h: 95: void Lcd_Write_String(char *a)
[; ;lcd.h: 96: {
[e :U _Lcd_Write_String ]
"95
[v _a `*uc ~T0 @X0 1 r1 ]
"96
[f ]
"97
[v _i `i ~T0 @X0 1 a ]
[; ;lcd.h: 97: int i;
[; ;lcd.h: 98: for(i=0;a[i]!='\0';i++)
"98
{
[e = _i -> 0 `i ]
[e $U 216  ]
"99
[e :U 213 ]
[; ;lcd.h: 99: Lcd_Write_Char(a[i]);
[e ( _Lcd_Write_Char (1 *U + _a * -> _i `x -> -> # *U _a `i `x ]
"98
[e ++ _i -> 1 `i ]
[e :U 216 ]
[e $ != -> *U + _a * -> _i `x -> -> # *U _a `i `x `ui -> 0 `ui 213  ]
[e :U 214 ]
"99
}
[; ;lcd.h: 100: }
"100
[e :UE 212 ]
}
"102
[v _Lcd_Shift_Right `(v ~T0 @X0 1 ef ]
"103
{
[; ;lcd.h: 102: void Lcd_Shift_Right()
[; ;lcd.h: 103: {
[e :U _Lcd_Shift_Right ]
[f ]
[; ;lcd.h: 104: Lcd_Cmd(0x01);
"104
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
[; ;lcd.h: 105: Lcd_Cmd(0x0C);
"105
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
[; ;lcd.h: 106: }
"106
[e :UE 217 ]
}
"108
[v _Lcd_Shift_Left `(v ~T0 @X0 1 ef ]
"109
{
[; ;lcd.h: 108: void Lcd_Shift_Left()
[; ;lcd.h: 109: {
[e :U _Lcd_Shift_Left ]
[f ]
[; ;lcd.h: 110: Lcd_Cmd(0x01);
"110
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
[; ;lcd.h: 111: Lcd_Cmd(0x08);
"111
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
[; ;lcd.h: 112: }
"112
[e :UE 218 ]
}
"45 main.c
[v _tocdo `f ~T0 @X0 1 e ]
[; ;main.c: 45: float tocdo;
"46
[v _xungdem `ui ~T0 @X0 1 e ]
[v _xungdo `ui ~T0 @X0 1 e ]
[; ;main.c: 46: unsigned int xungdem , xungdo;
"47
[v _str `uc ~T0 @X0 -> 20 `i e ]
[; ;main.c: 47: char str[20];
"48
[v _k `uc ~T0 @X0 1 e ]
[i _k
-> -> 110 `ui `uc
]
[; ;main.c: 48: char k = 'n';
"49
[v _input `i ~T0 @X0 1 e ]
[i _input
-> 0 `i
]
[; ;main.c: 49: int input = 0;
"50
[v _enter `i ~T0 @X0 1 e ]
[i _enter
-> 0 `i
]
[; ;main.c: 50: int enter = 0;
"53
[v _timer1 `(v ~T0 @X0 1 ef ]
"54
{
[; ;main.c: 53: void timer1()
[; ;main.c: 54: {
[e :U _timer1 ]
[f ]
[; ;main.c: 55: T1CONbits.TMR1CS=0;
"55
[e = . . _T1CONbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 57: T1CONbits.T1CKPS1=1;
"57
[e = . . _T1CONbits 1 4 -> -> 1 `i `uc ]
[; ;main.c: 58: T1CONbits.T1CKPS0=1;
"58
[e = . . _T1CONbits 1 3 -> -> 1 `i `uc ]
[; ;main.c: 59: TMR1L=34286&0X00FF;
"59
[e = _TMR1L -> & -> 34286 `l -> -> 255 `i `l `uc ]
[; ;main.c: 60: TMR1H=34286>>8;
"60
[e = _TMR1H -> >> -> 34286 `l -> 8 `i `uc ]
[; ;main.c: 61: T1CONbits.TMR1ON=1;
"61
[e = . . _T1CONbits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 62: PIR1bits.TMR1IF = 0;
"62
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 63: PIE1bits.TMR1IE = 1;
"63
[e = . . _PIE1bits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 64: INTCONbits.PEIE = 1;
"64
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
[; ;main.c: 65: INTCONbits.GIE = 1;
"65
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 66: }
"66
[e :UE 219 ]
}
"68
[v _ngat_init `(v ~T0 @X0 1 ef ]
"69
{
[; ;main.c: 68: void ngat_init()
[; ;main.c: 69: {
[e :U _ngat_init ]
[f ]
[; ;main.c: 70: OPTION_REG = 0b00000000;
"70
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 71: GIE=1;
"71
[e = _GIE -> -> 1 `i `b ]
[; ;main.c: 72: PEIE=1;
"72
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 73: INTE = 1;
"73
[e = _INTE -> -> 1 `i `b ]
[; ;main.c: 74: INTEDG = 0;
"74
[e = _INTEDG -> -> 0 `i `b ]
[; ;main.c: 75: }
"75
[e :UE 220 ]
}
"78
[v _delay_timer0_ms `(v ~T0 @X0 1 ef1`ui ]
"79
{
[; ;main.c: 78: void delay_timer0_ms(unsigned int t)
[; ;main.c: 79: {
[e :U _delay_timer0_ms ]
"78
[v _t `ui ~T0 @X0 1 r1 ]
"79
[f ]
[; ;main.c: 80: while(t--)
"80
[e $U 222  ]
[e :U 223 ]
[; ;main.c: 81: {
"81
{
[; ;main.c: 83: TMR0=100;
"83
[e = _TMR0 -> -> 100 `i `uc ]
[; ;main.c: 84: TMR0IF=0;
"84
[e = _TMR0IF -> -> 0 `i `b ]
[; ;main.c: 85: while(!TMR0IF);
"85
[e $U 225  ]
[e :U 226 ]
[e :U 225 ]
[e $ ! _TMR0IF 226  ]
[e :U 227 ]
"86
}
[e :U 222 ]
"80
[e $ != -- _t -> -> 1 `i `ui -> -> 0 `i `ui 223  ]
[e :U 224 ]
[; ;main.c: 86: }
[; ;main.c: 87: }
"87
[e :UE 221 ]
}
"88
[v _timer0_init `(v ~T0 @X0 1 ef ]
"89
{
[; ;main.c: 88: void timer0_init()
[; ;main.c: 89: {
[e :U _timer0_init ]
[f ]
[; ;main.c: 91: OPTION_REGbits.T0CS=0;
"91
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 92: OPTION_REGbits.PSA=0;
"92
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 94: OPTION_REGbits.PS2=1;
"94
[e = . . _OPTION_REGbits 1 2 -> -> 1 `i `uc ]
[; ;main.c: 95: OPTION_REGbits.PS1=0;
"95
[e = . . _OPTION_REGbits 1 1 -> -> 0 `i `uc ]
[; ;main.c: 96: OPTION_REGbits.PS0=0;
"96
[e = . . _OPTION_REGbits 1 0 -> -> 0 `i `uc ]
[; ;main.c: 97: }
"97
[e :UE 228 ]
}
[v $root$_NGAT `(v ~T0 @X0 0 e ]
[v F1118 `(v ~T0 @X0 1 tf ]
"99
[v _NGAT `IF1118 ~T0 @X0 1 e ]
"100
{
[; ;main.c: 99: void interrupt NGAT(void)
[; ;main.c: 100: {
[e :U _NGAT ]
[f ]
[; ;main.c: 101: if(INTCONbits.INTF==1)
"101
[e $ ! == -> . . _INTCONbits 0 1 `i -> 1 `i 230  ]
[; ;main.c: 102: {
"102
{
[; ;main.c: 103: xungdem=xungdem+1;
"103
[e = _xungdem + _xungdem -> -> 1 `i `ui ]
[; ;main.c: 104: INTCONbits.INTF=0;
"104
[e = . . _INTCONbits 0 1 -> -> 0 `i `uc ]
"105
}
[e :U 230 ]
[; ;main.c: 105: }
[; ;main.c: 106: if(PIR1bits.TMR1IF==1)
"106
[e $ ! == -> . . _PIR1bits 0 0 `i -> 1 `i 231  ]
[; ;main.c: 107: {
"107
{
[; ;main.c: 108: xungdo = xungdem;
"108
[e = _xungdo _xungdem ]
[; ;main.c: 109: PIE1bits.TMR1IE = 0;
"109
[e = . . _PIE1bits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 110: INTCONbits.INTE = 0;
"110
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 112: xungdem=0;
"112
[e = _xungdem -> -> 0 `i `ui ]
[; ;main.c: 114: INTCONbits.INTE = 1;
"114
[e = . . _INTCONbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 115: PIE1bits.TMR1IE = 1;
"115
[e = . . _PIE1bits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 116: TMR1L=34286&0X00FF;
"116
[e = _TMR1L -> & -> 34286 `l -> -> 255 `i `l `uc ]
[; ;main.c: 117: TMR1H=34286>>8;
"117
[e = _TMR1H -> >> -> 34286 `l -> 8 `i `uc ]
[; ;main.c: 118: PIR1bits.TMR1IF = 0;
"118
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
"119
}
[e :U 231 ]
[; ;main.c: 119: }
[; ;main.c: 120: }
"120
[e :UE 229 ]
}
"122
[v _convert `(l ~T0 @X0 1 ef1`l ]
{
[; ;main.c: 122: long convert(long b){
[e :U _convert ]
[v _b `l ~T0 @X0 1 r1 ]
[f ]
"123
[v _a `l ~T0 @X0 1 a ]
[; ;main.c: 123: long a = 1;
[e = _a -> -> 1 `i `l ]
[; ;main.c: 124: for(int i = 0;i < b;i++)
"124
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 236  ]
"125
[e :U 233 ]
[; ;main.c: 125: {
{
[; ;main.c: 126: a*=10;
"126
[e =* _a -> -> 10 `i `l ]
"127
}
"124
[e ++ _i -> 1 `i ]
[e :U 236 ]
[e $ < -> _i `l _b 233  ]
[e :U 234 ]
"127
}
[; ;main.c: 127: }
[; ;main.c: 128: return a;
"128
[e ) _a ]
[e $UE 232  ]
[; ;main.c: 129: }
"129
[e :UE 232 ]
}
"131
[v _inputValue `(i ~T0 @X0 1 ef ]
"132
{
[; ;main.c: 131: int inputValue()
[; ;main.c: 132: {
[e :U _inputValue ]
[f ]
[v _k `uc ~T0 @X0 1 a ]
"134
[v _arr `i ~T0 @X0 -> 10 `i a ]
[; ;main.c: 133: unsigned char k;
[; ;main.c: 134: int arr[10];
[; ;main.c: 135: arr[0]=0;
"135
[e = *U + &U _arr * -> -> -> 0 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 0 `i ]
"136
[v _dem `i ~T0 @X0 1 a ]
[; ;main.c: 136: int dem = 0;
[e = _dem -> 0 `i ]
[; ;main.c: 138: T:while(1)
"138
[e :U 238 ]
[e :U 240 ]
[; ;main.c: 139: {
"139
{
[; ;main.c: 140: k = switch_press_scan();
"140
[e = _k ( _switch_press_scan ..  ]
[; ;main.c: 141: if(k == '0')
"141
[e $ ! == -> _k `ui -> 48 `ui 242  ]
[; ;main.c: 142: {
"142
{
[; ;main.c: 143: Lcd_Write_Char(k);
"143
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 144: UART_send_char(k);
"144
[e ( _UART_send_char (1 _k ]
[; ;main.c: 145: arr[dem++] = 0;
"145
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 0 `i ]
"146
}
[e :U 242 ]
[; ;main.c: 146: }
[; ;main.c: 147: if(k == '1')
"147
[e $ ! == -> _k `ui -> 49 `ui 243  ]
[; ;main.c: 148: {
"148
{
[; ;main.c: 149: Lcd_Write_Char(k);
"149
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 150: UART_send_char(k);
"150
[e ( _UART_send_char (1 _k ]
[; ;main.c: 151: arr[dem++] = 1;
"151
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 1 `i ]
"152
}
[e :U 243 ]
[; ;main.c: 152: }
[; ;main.c: 153: if(k == '2')
"153
[e $ ! == -> _k `ui -> 50 `ui 244  ]
[; ;main.c: 154: {
"154
{
[; ;main.c: 155: Lcd_Write_Char(k);
"155
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 156: UART_send_char(k);
"156
[e ( _UART_send_char (1 _k ]
[; ;main.c: 157: arr[dem++] = 2;
"157
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 2 `i ]
"158
}
[e :U 244 ]
[; ;main.c: 158: }
[; ;main.c: 159: if(k == '3')
"159
[e $ ! == -> _k `ui -> 51 `ui 245  ]
[; ;main.c: 160: {
"160
{
[; ;main.c: 161: Lcd_Write_Char(k);
"161
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 162: UART_send_char(k);
"162
[e ( _UART_send_char (1 _k ]
[; ;main.c: 163: arr[dem++] = 3;
"163
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 3 `i ]
"164
}
[e :U 245 ]
[; ;main.c: 164: }
[; ;main.c: 165: if(k == '4')
"165
[e $ ! == -> _k `ui -> 52 `ui 246  ]
[; ;main.c: 166: {
"166
{
[; ;main.c: 167: Lcd_Write_Char(k);
"167
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 168: UART_send_char(k);
"168
[e ( _UART_send_char (1 _k ]
[; ;main.c: 169: arr[dem++] = 4;
"169
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 4 `i ]
"170
}
[e :U 246 ]
[; ;main.c: 170: }
[; ;main.c: 171: if(k == '5')
"171
[e $ ! == -> _k `ui -> 53 `ui 247  ]
[; ;main.c: 172: {
"172
{
[; ;main.c: 173: Lcd_Write_Char(k);
"173
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 174: UART_send_char(k);
"174
[e ( _UART_send_char (1 _k ]
[; ;main.c: 175: arr[dem++] = 5;
"175
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 5 `i ]
"176
}
[e :U 247 ]
[; ;main.c: 176: }
[; ;main.c: 177: if(k == '6')
"177
[e $ ! == -> _k `ui -> 54 `ui 248  ]
[; ;main.c: 178: {
"178
{
[; ;main.c: 179: Lcd_Write_Char(k);
"179
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 180: UART_send_char(k);
"180
[e ( _UART_send_char (1 _k ]
[; ;main.c: 181: arr[dem++] = 6;
"181
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 6 `i ]
"182
}
[e :U 248 ]
[; ;main.c: 182: }
[; ;main.c: 183: if(k == '7')
"183
[e $ ! == -> _k `ui -> 55 `ui 249  ]
[; ;main.c: 184: {
"184
{
[; ;main.c: 185: Lcd_Write_Char(k);
"185
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 186: UART_send_char(k);
"186
[e ( _UART_send_char (1 _k ]
[; ;main.c: 187: arr[dem++] = 7;
"187
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 7 `i ]
"188
}
[e :U 249 ]
[; ;main.c: 188: }
[; ;main.c: 189: if(k == '8')
"189
[e $ ! == -> _k `ui -> 56 `ui 250  ]
[; ;main.c: 190: {
"190
{
[; ;main.c: 191: Lcd_Write_Char(k);
"191
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 192: UART_send_char(k);
"192
[e ( _UART_send_char (1 _k ]
[; ;main.c: 193: arr[dem++] = 8;
"193
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 8 `i ]
"194
}
[e :U 250 ]
[; ;main.c: 194: }
[; ;main.c: 195: if(k == '9')
"195
[e $ ! == -> _k `ui -> 57 `ui 251  ]
[; ;main.c: 196: {
"196
{
[; ;main.c: 197: Lcd_Write_Char(k);
"197
[e ( _Lcd_Write_Char (1 _k ]
[; ;main.c: 198: UART_send_char(k);
"198
[e ( _UART_send_char (1 _k ]
[; ;main.c: 199: arr[dem++] = 9;
"199
[e = *U + &U _arr * -> -> ++ _dem -> 1 `i `ui `ux -> -> # *U &U _arr `ui `ux -> 9 `i ]
"200
}
[e :U 251 ]
[; ;main.c: 200: }
[; ;main.c: 201: if(k == 'D')
"201
[e $ ! == -> _k `ui -> 68 `ui 252  ]
[; ;main.c: 202: {
"202
{
[; ;main.c: 203: enter++;
"203
[e ++ _enter -> 1 `i ]
[; ;main.c: 204: break;
"204
[e $U 241  ]
"205
}
[e :U 252 ]
"206
}
[e :U 239 ]
"138
[e $U 240  ]
[e :U 241 ]
"207
[v _inputInt `i ~T0 @X0 1 a ]
[; ;main.c: 205: }
[; ;main.c: 206: }
[; ;main.c: 207: int inputInt = 0;
[e = _inputInt -> 0 `i ]
[; ;main.c: 208: for(int i = 0;i<dem;i++)
"208
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 256  ]
"209
[e :U 253 ]
[; ;main.c: 209: {
{
[; ;main.c: 210: inputInt += arr[i]*convert((dem-1)-i);
"210
[e =+ _inputInt -> * -> *U + &U _arr * -> -> _i `ui `ux -> -> # *U &U _arr `ui `ux `l ( _convert (1 -> - - _dem -> 1 `i _i `l `i ]
"211
}
"208
[e ++ _i -> 1 `i ]
[e :U 256 ]
[e $ < _i _dem 253  ]
[e :U 254 ]
"211
}
[; ;main.c: 211: }
[; ;main.c: 212: return inputInt;
"212
[e ) _inputInt ]
[e $UE 237  ]
[; ;main.c: 213: }
"213
[e :UE 237 ]
}
"215
[v _Speed `(v ~T0 @X0 1 ef ]
"216
{
[; ;main.c: 215: void Speed()
[; ;main.c: 216: {
[e :U _Speed ]
[f ]
[; ;main.c: 217: Lcd_Set_Cursor(1,1);
"217
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 218: Lcd_Write_String("Enter value from");
"218
[e ( _Lcd_Write_String (1 -> :s 1C `*uc ]
[; ;main.c: 219: Lcd_Set_Cursor(2,1);
"219
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 220: Lcd_Write_String("0-100: ");
"220
[e ( _Lcd_Write_String (1 -> :s 2C `*uc ]
[; ;main.c: 222: input = inputValue();
"222
[e = _input ( _inputValue ..  ]
[; ;main.c: 223: if(input <= 100)
"223
[e $ ! <= _input -> 100 `i 258  ]
[; ;main.c: 224: {
"224
{
[; ;main.c: 225: Lcd_Clear();
"225
[e ( _Lcd_Clear ..  ]
[; ;main.c: 226: Lcd_Set_Cursor(1,1);
"226
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 227: Lcd_Write_String("Speed updated");
"227
[e ( _Lcd_Write_String (1 -> :s 3C `*uc ]
[; ;main.c: 228: _delay((unsigned long)((50)*(20000000/4000.0)));
"228
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 229: Lcd_Clear();
"229
[e ( _Lcd_Clear ..  ]
"230
}
[; ;main.c: 230: }
[e $U 259  ]
"231
[e :U 258 ]
[; ;main.c: 231: else
[; ;main.c: 232: {
"232
{
[; ;main.c: 233: Lcd_Clear();
"233
[e ( _Lcd_Clear ..  ]
[; ;main.c: 234: Lcd_Set_Cursor(1,1);
"234
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 235: Lcd_Write_String("Invalid value");
"235
[e ( _Lcd_Write_String (1 -> :s 4C `*uc ]
[; ;main.c: 236: _delay((unsigned long)((50)*(20000000/4000.0)));
"236
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"237
}
[e :U 259 ]
[; ;main.c: 237: }
[; ;main.c: 238: }
"238
[e :UE 257 ]
}
"239
[v _SwitchMode `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 239: void SwitchMode(){
[e :U _SwitchMode ]
[f ]
[; ;main.c: 240: k = switch_press_scan();
"240
[e = _k ( _switch_press_scan ..  ]
[; ;main.c: 241: if(k == 'A')
"241
[e $ ! == -> _k `ui -> 65 `ui 261  ]
[; ;main.c: 242: {
"242
{
[; ;main.c: 243: RC0 = 0;
"243
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 244: RC4 = 1;
"244
[e = _RC4 -> -> 1 `i `b ]
[; ;main.c: 245: UART_send_string(" -Clockwise ");
"245
[e ( _UART_send_string (1 -> :s 5C `*uc ]
[; ;main.c: 246: Lcd_Clear();
"246
[e ( _Lcd_Clear ..  ]
[; ;main.c: 247: Lcd_Write_String(" Quay thuan");
"247
[e ( _Lcd_Write_String (1 -> :s 6C `*uc ]
[; ;main.c: 248: Lcd_Set_Cursor(2,1);
"248
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 249: Lcd_Write_String(str);
"249
[e ( _Lcd_Write_String (1 &U _str ]
"250
}
[e :U 261 ]
[; ;main.c: 250: }
[; ;main.c: 251: if(k == 'B')
"251
[e $ ! == -> _k `ui -> 66 `ui 262  ]
[; ;main.c: 252: {
"252
{
[; ;main.c: 253: RC0 = 1;
"253
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 254: RC4 = 0;
"254
[e = _RC4 -> -> 0 `i `b ]
[; ;main.c: 255: UART_send_string(" -Anti-clockwise ");
"255
[e ( _UART_send_string (1 -> :s 7C `*uc ]
[; ;main.c: 256: Lcd_Clear();
"256
[e ( _Lcd_Clear ..  ]
[; ;main.c: 257: Lcd_Write_String(" Quay nguoc");
"257
[e ( _Lcd_Write_String (1 -> :s 8C `*uc ]
[; ;main.c: 258: Lcd_Set_Cursor(2,1);
"258
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 259: Lcd_Write_String(str);
"259
[e ( _Lcd_Write_String (1 &U _str ]
"260
}
[e :U 262 ]
[; ;main.c: 260: }
[; ;main.c: 261: if(k == 'C')
"261
[e $ ! == -> _k `ui -> 67 `ui 263  ]
[; ;main.c: 262: {
"262
{
[; ;main.c: 263: Lcd_Clear();
"263
[e ( _Lcd_Clear ..  ]
[; ;main.c: 264: Speed();
"264
[e ( _Speed ..  ]
"265
}
[e :U 263 ]
[; ;main.c: 265: }
[; ;main.c: 266: if(k == 'D')
"266
[e $ ! == -> _k `ui -> 68 `ui 264  ]
[; ;main.c: 267: {
"267
{
[; ;main.c: 268: input = 0;
"268
[e = _input -> 0 `i ]
[; ;main.c: 269: RC0 = 0;
"269
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 270: RC4 = 0;
"270
[e = _RC4 -> -> 0 `i `b ]
"271
}
[e :U 264 ]
[; ;main.c: 271: }
[; ;main.c: 272: }
"272
[e :UE 260 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"273
[v _main `(v ~T0 @X0 1 ef ]
"274
{
[; ;main.c: 273: void main()
[; ;main.c: 274: {
[e :U _main ]
[f ]
[; ;main.c: 275: TRISC = 0x00;
"275
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 276: TRISD = 0x00;
"276
[e = _TRISD -> -> 0 `i `uc ]
[; ;main.c: 277: TRISB0 = 1;
"277
[e = _TRISB0 -> -> 1 `i `b ]
[; ;main.c: 278: TRISC5 = 1;
"278
[e = _TRISC5 -> -> 1 `i `b ]
[; ;main.c: 279: PORTC = 0;
"279
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 281: Keypad_init();
"281
[e ( _Keypad_init ..  ]
[; ;main.c: 282: Lcd_Init();
"282
[e ( _Lcd_Init ..  ]
[; ;main.c: 283: PWM1_init(5000);
"283
[e ( _PWM1_init (1 -> -> 5000 `i `l ]
[; ;main.c: 284: PWM1_start();
"284
[e ( _PWM1_start ..  ]
[; ;main.c: 285: Lcd_Clear();
"285
[e ( _Lcd_Clear ..  ]
[; ;main.c: 286: UART_init();
"286
[e ( _UART_init ..  ]
[; ;main.c: 287: Speed();
"287
[e ( _Speed ..  ]
[; ;main.c: 288: timer1();
"288
[e ( _timer1 ..  ]
[; ;main.c: 289: ngat_init();
"289
[e ( _ngat_init ..  ]
[; ;main.c: 290: timer0_init();
"290
[e ( _timer0_init ..  ]
[; ;main.c: 292: Lcd_Write_String(" Press a char");
"292
[e ( _Lcd_Write_String (1 -> :s 9C `*uc ]
[; ;main.c: 293: UART_send_string("  A.Quay thuan | B.Quay nghich | C.Change speed | D.Emergency Stop|");
"293
[e ( _UART_send_string (1 -> :s 10C `*uc ]
[; ;main.c: 294: SwitchMode();
"294
[e ( _SwitchMode ..  ]
[; ;main.c: 296: while(1)
"296
[e :U 267 ]
[; ;main.c: 297: {
"297
{
[; ;main.c: 298: tocdo = (1000.0f*xungdo*60)/(360*50);
"298
[e = _tocdo / * * -> .1000.0 `f -> _xungdo `f -> -> 60 `i `f -> * -> 360 `i -> 50 `i `f ]
[; ;main.c: 299: sprintf(str," Toc do = %0.0f v/p " ,tocdo);
"299
[e ( _sprintf (1 , (. , &U _str :s 11C -> _tocdo `d ]
[; ;main.c: 300: if(RC5==1)
"300
[e $ ! == -> _RC5 `i -> 1 `i 269  ]
[; ;main.c: 301: {
"301
{
[; ;main.c: 302: UART_send_string("  A.Quay thuan | B.Quay nghich | C.Change speed | D.Emergency Stop|");
"302
[e ( _UART_send_string (1 -> :s 12C `*uc ]
[; ;main.c: 303: Lcd_Clear();
"303
[e ( _Lcd_Clear ..  ]
[; ;main.c: 304: Lcd_Write_String(" Bam 1 ky tu");
"304
[e ( _Lcd_Write_String (1 -> :s 13C `*uc ]
[; ;main.c: 305: SwitchMode();
"305
[e ( _SwitchMode ..  ]
"306
}
[e :U 269 ]
[; ;main.c: 306: }
[; ;main.c: 308: PWM1_Set_duty(input);
"308
[e ( _PWM1_Set_duty (1 -> _input `ui ]
[; ;main.c: 309: Lcd_Set_Cursor(2,1);
"309
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 310: Lcd_Write_String(str);
"310
[e ( _Lcd_Write_String (1 &U _str ]
[; ;main.c: 311: UART_send_string(str);
"311
[e ( _UART_send_string (1 &U _str ]
[; ;main.c: 312: _delay((unsigned long)((200)*(20000000/4000.0)));
"312
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"313
}
[e :U 266 ]
"296
[e $U 267  ]
[e :U 268 ]
[; ;main.c: 313: }
[; ;main.c: 314: }
"314
[e :UE 265 ]
}
[p f _sprintf 8462340 ]
[a 10C 32 32 65 46 81 117 97 121 32 116 104 117 97 110 32 124 32 66 46 81 117 97 121 32 110 103 104 105 99 104 32 124 32 67 46 67 104 97 110 103 101 32 115 112 101 101 100 32 124 32 68 46 69 109 101 114 103 101 110 99 121 32 83 116 111 112 124 0 ]
[a 12C 32 32 65 46 81 117 97 121 32 116 104 117 97 110 32 124 32 66 46 81 117 97 121 32 110 103 104 105 99 104 32 124 32 67 46 67 104 97 110 103 101 32 115 112 101 101 100 32 124 32 68 46 69 109 101 114 103 101 110 99 121 32 83 116 111 112 124 0 ]
[a 13C 32 66 97 109 32 49 32 107 121 32 116 117 0 ]
[a 9C 32 80 114 101 115 115 32 97 32 99 104 97 114 0 ]
[a 6C 32 81 117 97 121 32 116 104 117 97 110 0 ]
[a 1C 69 110 116 101 114 32 118 97 108 117 101 32 102 114 111 109 0 ]
[a 4C 73 110 118 97 108 105 100 32 118 97 108 117 101 0 ]
[a 3C 83 112 101 101 100 32 117 112 100 97 116 101 100 0 ]
[a 8C 32 81 117 97 121 32 110 103 117 111 99 0 ]
[a 11C 32 84 111 99 32 100 111 32 61 32 37 48 46 48 102 32 118 47 112 32 0 ]
[a 7C 32 45 65 110 116 105 45 99 108 111 99 107 119 105 115 101 32 0 ]
[a 5C 32 45 67 108 111 99 107 119 105 115 101 32 0 ]
[a 2C 48 45 49 48 48 58 32 0 ]
